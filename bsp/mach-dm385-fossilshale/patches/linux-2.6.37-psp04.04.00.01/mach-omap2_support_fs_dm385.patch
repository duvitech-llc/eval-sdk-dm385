Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains81xx.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains81xx.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains81xx.h	2014-08-07 07:58:50.000000000 -0600
@@ -51,6 +51,36 @@
 					 CHIP_IS_DM385),
 };
 
+static struct clockdomain alwon_l3_med_81xx_clkdm = {
+	.name		= "alwon_l3_med_clkdm",
+	.pwrdm		= { .name = "alwon_pwrdm" },
+	.cm_inst	= TI81XX_CM_ALWON_MOD,
+	.clkdm_offs	= TI81XX_CM_ALWON_L3_MED_CLKDM,
+	.clktrctrl_mask	= TI81XX_CLKTRCTRL_MASK,
+#if defined(CONFIG_ARCH_TI814X)
+	.flags		= CLKDM_CAN_SWSUP,
+#else
+	.flags		= CLKDM_CAN_HWSUP_SWSUP,
+#endif
+	.omap_chip	= OMAP_CHIP_INIT(CHIP_IS_TI816X | CHIP_IS_TI814X |
+					 CHIP_IS_DM385),
+};
+
+static struct clockdomain alwon_l3_fast_81xx_clkdm = {
+	.name		= "alwon_l3_fast_clkdm",
+	.pwrdm		= { .name = "alwon_pwrdm" },
+	.cm_inst	= TI81XX_CM_ALWON_MOD,
+	.clkdm_offs	= TI81XX_CM_ALWON_L3_FAST_CLKDM,
+	.clktrctrl_mask	= TI81XX_CLKTRCTRL_MASK,
+#if defined(CONFIG_ARCH_TI814X)
+	.flags		= CLKDM_CAN_SWSUP,
+#else
+	.flags		= CLKDM_CAN_HWSUP_SWSUP,
+#endif
+	.omap_chip	= OMAP_CHIP_INIT(CHIP_IS_TI816X | CHIP_IS_TI814X |
+					 CHIP_IS_DM385),
+};
+
 static struct clockdomain alwon_ethernet_81xx_clkdm = {
 	.name		= "alwon_ethernet_clkdm",
 	.pwrdm		= { .name = "alwon_pwrdm" },
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm-regbits-81xx.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm-regbits-81xx.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm-regbits-81xx.h	2014-08-06 15:51:16.089549484 -0600
@@ -198,6 +198,29 @@
 #define TI814X_DMTIMER8_CLKS_MASK			(7 << 0)
 
 /* Select CLKOUT_MUX source */
+#define TI811X_DMTIMER1_CLKS_SHIFT			4
+#define TI811X_DMTIMER1_CLKS_MASK			(0xf << 4)
+
+#define TI811X_DMTIMER2_CLKS_SHIFT			8
+#define TI811X_DMTIMER2_CLKS_MASK			(0xf << 8)
+
+#define TI811X_DMTIMER3_CLKS_SHIFT			12
+#define TI811X_DMTIMER3_CLKS_MASK			(0xf << 12)
+
+#define TI811X_DMTIMER4_CLKS_SHIFT			16
+#define TI811X_DMTIMER4_CLKS_MASK			(0xf << 16)
+
+#define TI811X_DMTIMER5_CLKS_SHIFT			20
+#define TI811X_DMTIMER5_CLKS_MASK			(0xf << 20)
+
+#define TI811X_DMTIMER6_CLKS_SHIFT			24
+#define TI811X_DMTIMER6_CLKS_MASK			(0xf << 24)
+
+#define TI811X_DMTIMER7_CLKS_SHIFT			28
+#define TI811X_DMTIMER7_CLKS_MASK			(0xf << 28)
+
+#define TI811X_DMTIMER8_CLKS_SHIFT			0
+#define TI811X_DMTIMER8_CLKS_MASK			(0xf << 0)
 #define TI814X_CLKOUT0_MUX_SHIFT			0
 #define TI814X_CLKOUT0_MUX_MASK				(0xF << 0)
 
@@ -210,6 +233,11 @@
 
 #define TI814X_CPTS_RFT_SHIFT				1
 #define TI814X_CPTS_RFT_MASK				(7 << 1)
+#define TI811X_GMAC_125_MUX_SHIFT			16
+#define TI811X_GMAC_125_MUX_MASK			(1 << 16)
+
+#define TI811X_GMAC_50_MUX_SHIFT			17
+#define TI811X_GMAC_50_MUX_MASK				(1 << 17)
 
 /* GMAC ECO MUX CLKSRC SELECT */
 #define TI814X_GMAC_GMII_MUX_SHIFT			4
@@ -232,6 +260,12 @@
 /* Select WDT0_CLKSRC */
 #define TI814X_WDT0_SHIFT				0
 #define TI814X_WDT0_MASK				(1 << 0)
+#define TI811X_DUCATI_CLKSEL_SHIFT			0
+#define TI811X_DUCATI_CLKSEL_MASK			(3 << 0)
+
+/* Select DSS_MUX_SRC */
+#define TI811X_DSS_CLKSEL_SHIFT				0
+#define TI811X_DSS_CLKSEL_MASK				(3 << 0)
 
 /* Select EMIF_CLK_GATE */
 #define TI814X_EMIFSS_CLK_GATE_SHIFT			0
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm81xx.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm81xx.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/cm81xx.h	2014-08-06 15:51:16.089549484 -0600
@@ -71,6 +71,8 @@
 /* ALWON */
 #define TI81XX_CM_ALWON_MPU_CLKDM		0x001C
 #define TI81XX_CM_ALWON_L3_SLOW_CLKDM		0x0000
+#define TI81XX_CM_ALWON_L3_MED_CLKDM		0x0004
+#define TI81XX_CM_ALWON_L3_FAST_CLKDM		0x0030
 #define TI81XX_CM_ETHERNET_CLKDM		0x0004
 #define TI81XX_CM_MMU_CLKDM			0x000C
 #define TI81XX_CM_MMUCFG_CLKDM			0x0010
@@ -120,6 +122,7 @@
 #define TI814X_CM_ISP_CLKDM			0x0000
 
 /* ADPLLJ control and config register offsets */
+#define ADPLLJ_BASE				0x0
 #define ADPLLJ_CLKCTRL				0x4
 #define ADPLLJ_TENABLE				0x8
 #define ADPLLJ_TENDIV				0xC
@@ -307,6 +310,7 @@
 #define TI81XX_CM_ALWON_SPI_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x0190)
 #define TI81XX_CM_ALWON_MAILBOX_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x0194)
 #define TI81XX_CM_ALWON_SPINBOX_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x0198)
+#define TI81XX_CM_ALWON_VLYNQ_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x01A0)
 #define TI81XX_CM_ALWON_MMUDATA_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x019C)
 #define TI81XX_CM_ALWON_MMUCFG_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x01A8)
 #define TI81XX_CM_ALWON_SDIO_CLKCTRL		TI81XX_CM_REGADDR(TI81XX_CM_ALWON_MOD, 0x01B0)
@@ -374,6 +378,7 @@
 #define TI816X_CM_ALWON_MCBSP_FSX_EN		TI81XX_L4_SLOW_IO_ADDRESS(TI81XX_SCM_BASE + 0xA50)
 #define TI816X_CM_ALWON_MCBSP_CLKS_EN		TI81XX_L4_SLOW_IO_ADDRESS(TI81XX_SCM_BASE + 0xA60)
 
+#define TI811X_A8_INT_MUX_95_92			TI81XX_L4_SLOW_IO_ADDRESS(TI81XX_SCM_BASE + 0x1654)
 /*
  * TI814X "PLL Clock Muxing and Gating Control" is located separately from CM
  * but for now we are keeping its register here.
@@ -396,9 +401,12 @@
 #define TI814X_PLL_CMGC_HDVENC_A_CLKSRC		TI814X_PLL_REGADDR(0x02F8)
 #define TI814X_PLL_CMGC_WDT0_CLKSRC		TI814X_PLL_REGADDR(0x02F4)
 #define TI814X_PLL_CMGC_EMIF_CLK_GATE		TI814X_PLL_REGADDR(0x030C)
+#define TI814X_PLL_CMGC_EMIF_CLK_GATE_PG2	TI814X_PLL_REGADDR(0x0694)
 #define TI814X_PLL_CMGC_TIMER_CLK_CHANGE	TI814X_PLL_REGADDR(0x0320)
 #define TI814X_PLL_CMGC_DEEPSLEEP_CTRL		TI814X_PLL_REGADDR(0x0324)
 #define TI814X_PLL_CMGC_DEEPSLEEP_STATUS	TI814X_PLL_REGADDR(0x0328)
 #define TI814X_PLL_CMGC_GMAC_ECO_CLKSRC		TI814X_PLL_REGADDR(0x131C)
+#define TI811X_PLL_CMGC_DUCATI_CLKSRC		TI814X_PLL_REGADDR(0x02F8)
+#define TI811X_PLL_CMGC_DSS_CLKSRC		TI814X_PLL_REGADDR(0x02FC)
 
 #endif
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.h	2014-08-06 15:51:16.089549484 -0600
@@ -44,10 +44,39 @@
 #define OMAP_WAKEUP_EVENT		(1 << 15)
 
 /* TI814x specific mux bit definitions */
+#define TI81XX_MUX_MODE0	0
+#define TI81XX_MUX_MODE1	1
+#define TI81XX_MUX_MODE2	2
+#define TI81XX_MUX_MODE3	3
+#define TI81XX_MUX_MODE4	4
+#define TI81XX_MUX_MODE5	5
+#define TI81XX_MUX_MODE6	6
+#define TI81XX_MUX_MODE7	7
+#define TI81XX_MUX_MODE8	8
+#define TI81XX_MUX_MODE9	9
+#define TI81XX_MUX_MODE10	10
+#define TI81XX_MUX_MODE11	11
+
+/* TI816x Specific mux bit definitions */
+#define TI816X_PULL_DIS			(1 << 3)
+#define TI816X_PULL_UP			(1 << 4)
 #define TI814X_PULL_DIS			(1 << 16)
 #define TI814X_PULL_UP			(1 << 17)
 #define TI814X_INPUT_EN			(1 << 18)
 #define TI814X_SLEW_SLOW		(1 << 19)
+#define TI816X_PIN_STATE_MASK		(TI816X_PULL_DIS | TI816X_PULL_UP)
+#define TI816X_PIN_PULL_UP		(TI816X_PULL_UP)
+#define TI816X_PIN_PULL_DOWN		(0)
+#define TI816X_PIN_PULL_DIS		(TI816X_PULL_DIS)
+
+#define TI814X_PIN_STATE_MASK		(TI814X_PULL_DIS | TI814X_PULL_UP |\
+					TI814X_INPUT_EN)
+#define TI814X_PIN_INPUT_PULL_DIS	(TI814X_INPUT_EN | TI814X_PULL_DIS)
+#define TI814X_PIN_INPUT_PULL_UP	(TI814X_INPUT_EN | TI814X_PULL_UP)
+#define TI814X_PIN_INPUT_PULL_DOWN	(TI814X_INPUT_EN)
+#define TI814X_PIN_OUTPUT_PULL_DIS	(TI814X_PULL_DIS)
+#define TI814X_PIN_OUTPUT_PULL_UP	(TI814X_PULL_UP)
+#define TI814X_PIN_OUTPUT_PULL_DOWN	(0)
 
 /* Active pin states */
 #define OMAP_PIN_OUTPUT			0
@@ -80,7 +109,7 @@
 #define OMAP_PACKAGE_ZAF		1		/* 2420 447-pin SIP */
 
 
-#define OMAP_MUX_NR_MODES		8		/* Available modes */
+#define OMAP_MUX_NR_MODES		12		/* Available modes */
 #define OMAP_MUX_NR_SIDES		2		/* Bottom & top */
 
 /*
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/board-ti814x.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/board-ti814x.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/board-ti814x.h	2014-08-06 15:51:16.089549484 -0600
@@ -29,11 +29,11 @@
 int vps_ti814x_select_video_decoder(int vid_decoder_id);
 int vps_ti814x_set_tvp7002_filter(enum fvid2_standard standard);
 #else
-int ti814x_pcf8575_init(void)
+static inline int ti814x_pcf8575_init(void)
 {
 	return 0;
 }
-int ti814x_pcf8575_exit(void)
+static inline int ti814x_pcf8575_exit(void)
 {
 	return 0;
 }
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/pci.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/pci.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/pci.h	2014-08-06 15:51:16.089549484 -0600
@@ -23,10 +23,175 @@
 /*
  * PCI Resource allocation.
  *
- * IMPORTANT: Ensure that the values used below match with the ones passed
+ * IMPORTANT: Ensure that the vals used below match with the ones passed
  * though PCIe RC platform data (from SoC/board file).
  */
 #define PCIBIOS_MIN_IO			(TI816X_PCIE_IO_BASE)
+#define PCI_IO_SIZE			(SZ_2M + SZ_1M)
 #define PCIBIOS_MIN_MEM			(TI816X_PCIE_MEM_BASE)
 
+/*
+ * Override the I/O accessors to catch accesses to PCIe window and route them
+ * through PCIe i/o routines. Pass through others as normal (non-PCIe) accesses.
+ *
+ * Note that, curretly only TI81XX devices support PCIe.
+ */
+#if defined CONFIG_PCI && !defined __ASSEMBLER__
+#define is_pcie_io(addr)	(cpu_is_ti81xx() &&			\
+				((u32)(addr) & ~(PCI_IO_SIZE - 1)) ==	\
+					PCIBIOS_MIN_IO)
+
+
+extern int ti81xx_pci_io_read(u32 addr, int size, u32 *val);
+extern int ti81xx_pci_io_write(u32 addr, int size, u32 val);
+
+static inline void _outb(u8 val, u32 addr)
+{
+	if (is_pcie_io(addr))
+		ti81xx_pci_io_write(addr, 1, (u32)val);
+	else
+		__raw_writeb(val, __typesafe_io(addr));
+}
+
+static inline void _outw(u16 val, u32 addr)
+{
+	if (is_pcie_io(addr))
+		ti81xx_pci_io_write(addr, 2, (u32)val);
+	else
+		__raw_writew((__force __u16)cpu_to_le16(val),
+				__typesafe_io(addr));
+}
+
+static inline void _outl(u32 val, u32 addr)
+{
+	if (is_pcie_io(addr))
+		ti81xx_pci_io_write(addr, 4, val);
+	else
+		__raw_writel((__force __u32)cpu_to_le32(val),
+				__typesafe_io(addr));
+}
+
+static inline u8 _inb(u32 addr)
+{
+	if (is_pcie_io(addr)) {
+		u32 val;
+		ti81xx_pci_io_read(addr, 1, &val);
+		return (u8)val;
+	} else {
+		return __raw_readb(__typesafe_io(addr));
+	}
+}
+
+static inline u16 _inw(u32 addr)
+{
+	if (is_pcie_io(addr)) {
+		u32 val;
+		ti81xx_pci_io_read(addr, 2, &val);
+		return (u16)val;
+	} else {
+		return le16_to_cpu((__force __le16)
+				__raw_readw(__typesafe_io(addr)));
+	}
+}
+
+static inline u32 _inl(u32 addr)
+{
+	if (is_pcie_io(addr)) {
+		u32 val;
+		ti81xx_pci_io_read(addr, 4, &val);
+		return (u32)val;
+	} else {
+		return le32_to_cpu((__force __le32)
+				__raw_readl(__typesafe_io(addr)));
+	}
+}
+
+#define outb(v,p)	_outb(v,p)
+#define outw(v,p)	_outw(v,p)
+#define outl(v,p)	_outl(v,p)
+
+#define inb(p)		_inb(p)
+#define inw(p)		_inw(p)
+#define inl(p)		_inl(p)
+
+#define ioread8(addr)							\
+	({								\
+		u32 val;						\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_read((u32)addr, 1, &val);		\
+		} else {						\
+			val = __raw_readb(addr);			\
+			__iormb();					\
+		}							\
+		(u8)val;						\
+	})
+
+#define ioread16(addr)							\
+	({								\
+		u32 val;						\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_read((u32)addr, 2, &val);		\
+		} else {						\
+			val = le16_to_cpu((__force __le16)__raw_readw(addr));	\
+			__iormb();					\
+		}							\
+		(u16)val;						\
+	})
+
+#define ioread32(addr)							\
+	({								\
+		u32 val;						\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_read((u32)addr, 4, &val);		\
+		} else {						\
+			val = le32_to_cpu((__force __le32)__raw_readl(addr));	\
+			__iormb();					\
+		}							\
+		val;							\
+	})
+
+#define iowrite8(val,addr)						\
+	({								\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_write((u32)addr, 1, (u32)val);		\
+		} else {						\
+			__iowmb();					\
+			__raw_writeb(val, addr);			\
+		}							\
+	})
+
+#define iowrite16(val,addr)						\
+	({								\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_write((u32)addr, 2, (u32)val);		\
+		} else {						\
+			__iowmb();					\
+			__raw_writew((__force __u16)cpu_to_le16(val), addr);	\
+		}							\
+	})
+
+#define iowrite32(val,addr)						\
+	({								\
+		if (is_pcie_io(addr)) {					\
+			ti81xx_pci_io_write((u32)addr, 4, val);		\
+		} else {						\
+			__iowmb();					\
+			__raw_writel((__force __u32)cpu_to_le32(val), addr);	\
+		}							\
+	})
+
+/* Currently retaining same as io.h */
+#define ioread8_rep(p,d,c)	__raw_readsb(p,d,c)
+#define ioread16_rep(p,d,c)	__raw_readsw(p,d,c)
+#define ioread32_rep(p,d,c)	__raw_readsl(p,d,c)
+
+#define iowrite8_rep(p,s,c)	__raw_writesb(p,s,c)
+#define iowrite16_rep(p,s,c)	__raw_writesw(p,s,c)
+#define iowrite32_rep(p,s,c)	__raw_writesl(p,s,c)
+
+/* These mimic the corresponding funcitons in arch/arm/mm/iomap.c */
+#define ioport_map(port, nr)	__typesafe_io(port);
+#define ioport_unmap(addr)
+
+#endif /* CONFIG_PCI */
 #endif
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/pcie-ti81xx.h
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/pcie-ti81xx.h	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/pcie-ti81xx.h	2014-08-06 15:51:16.089549484 -0600
@@ -20,6 +20,7 @@
 	int msi_irq_base;
 	int msi_irq_num;
 	int force_x1;
+	int force_gen1;		/* 1 = Force GEN1 speeds */
 	int msi_inv;		/* 1 = MSI ack requires "write 0 to clear" */
 	unsigned short int device_id;
 };
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/adpll_ti814x.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/adpll_ti814x.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/adpll_ti814x.c	2014-08-06 15:51:16.093549484 -0600
@@ -29,6 +29,7 @@
 #include <linux/math64.h>
 #include "clock.h"
 #include "cm-regbits-81xx.h"
+#include "cm81xx.h"
 
 /* Macros */
 /* Internal ref clock frequency range in (Hz) */
@@ -95,9 +96,9 @@
 
 	dd = clk->dpll_data;
 
-	state <<= __ffs(dd->idlest_mask);
+	state <<= __ffs(TI814X_ST_ADPLL_MASK);
 
-	while (((__raw_readl(dd->idlest_reg) & dd->idlest_mask) != state) &&
+	while (((__raw_readl(dd->base + ADPLLJ_STATUS) & TI814X_ST_ADPLL_MASK) != state) &&
 		i < MAX_DPLL_WAIT_TRIES) {
 		i++;
 		udelay(1);
@@ -136,7 +137,7 @@
 
 	/* Instruct ADPLL to enter Bypass mode 1 - bypass 0 - Active&Locked */
 	v = __raw_readl(dd->control_reg);
-	v |= (1 << dd->bypass_bit);
+	v |= (1 << TI814X_EN_ADPLL_BYPASS_SHIFT);
 	__raw_writel(v, dd->control_reg);
 
 	r = _ti814x_wait_dpll_status(clk, ST_ADPLL_BYPASSED);
@@ -159,7 +160,7 @@
 
 	/* Instruct ADPLL to exit Bypass mode 1 - bypass 0 - Active&Locked */
 	v = __raw_readl(dd->control_reg);
-	v &= ~(1 << dd->bypass_bit);
+	v &= ~(1 << TI814X_EN_ADPLL_BYPASS_SHIFT);
 	__raw_writel(v, dd->control_reg);
 
 	return 0;
@@ -240,7 +241,7 @@
 	do {
 		udelay(1);
 		i++;
-		v = (__raw_readl(dd->idlest_reg) &
+		v = (__raw_readl(dd->base + ADPLLJ_STATUS) &
 			TI814X_ADPLL_STBYRET_ACK_MASK);
 		v >>= __ffs(TI814X_ADPLL_STBYRET_ACK_MASK);
 	} while ((v != val) && i < MAX_DPLL_WAIT_TRIES);
@@ -275,7 +276,7 @@
 
 	/* DPLL must be in retention before entering stop mode */
 	v = __raw_readl(dd->control_reg);
-	v |= (1 << dd->stby_ret_bit);
+	v |= (1 << TI814X_EN_ADPLL_STBYRET_SHIFT);
 	__raw_writel(v, dd->control_reg);
 
 
@@ -287,7 +288,7 @@
 
 		/* Return from retention as Ack not received */
 		v = __raw_readl(dd->control_reg);
-		v &= ~(1 << dd->stby_ret_bit);
+		v &= ~(1 << TI814X_EN_ADPLL_STBYRET_SHIFT);
 		__raw_writel(v, dd->control_reg);
 		return -EINVAL;
 	}
@@ -295,7 +296,7 @@
 
 		/* Enter DPLL stop mode, not supported on ADPLLLJ */
 		v = __raw_readl(dd->control_reg);
-		v |= (1 << dd->stop_mode_bit);
+		v |= (1 << TI814X_EN_MODENA_ADPLL_STOPMODE_SHIFT);
 		__raw_writel(v, dd->control_reg);
 	}
 	return 0;
@@ -478,6 +479,7 @@
 	u32 inp_rate, scaled_inp_rate, scaled_targ_rate;
 	s64 quotient, rfraction, dividend;
 	u32 remainder, rremainder;
+	u32 max_multiplier;
 	unsigned long frac_overflow;
 	dd = clk->dpll_data;
 	if (!dd)
@@ -502,7 +504,14 @@
 	/* rounding remainder */
 	rremainder = target_rate % ADPLL_ROUNDING_DIVIDER;
 	m = quotient;
-	if ((m < TI814X_ADPLL_MIN_MULT) || (m > dd->max_multiplier))
+
+	if(dd->flags & TI814X_ADPLL_LJ_TYPE)
+		max_multiplier = TI814X_ADPLLJ_MAX_MULT;
+	else
+		max_multiplier = TI814X_ADPLLS_MAX_MULT;
+
+
+	if ((m < TI814X_ADPLL_MIN_MULT) || (m > max_multiplier))
 		return -EINVAL;
 	dd->last_rounded_m = m;
 
@@ -543,8 +552,8 @@
 		return;
 	/* Check dpll status */
 	v = __raw_readl(dd->control_reg);
-	v &= (1 << dd->bypass_bit);
-	v >>= dd->bypass_bit;
+	v &= (1 << TI814X_EN_ADPLL_BYPASS_SHIFT);
+	v >>= TI814X_EN_ADPLL_BYPASS_SHIFT;
 
 	/* Reparent in case the dpll is in bypass */
 	if (v == 1)
@@ -563,7 +572,7 @@
 {
 	unsigned long long dpll_rate;
 	unsigned long long num, den;
-	u32 m, frac_m, n, m2, v, ctrl;
+	u32 m, frac_m, n, m2, v, ctrl, div_n_mask;
 	struct dpll_data *dd = clk->dpll_data;
 
 	if (!dd)
@@ -571,26 +580,32 @@
 
 	/* Return bypass rate if DPLL is bypassed or stbyret/stopmode */
 	ctrl = __raw_readl(dd->control_reg);
-	v = (ctrl & (1 << dd->bypass_bit)) | (ctrl & (1 << dd->stby_ret_bit));
+	v = (ctrl & (1 << TI814X_EN_ADPLL_BYPASS_SHIFT)) | (ctrl & (1 << TI814X_EN_ADPLL_STBYRET_SHIFT));
 
 	if (v)
 		return dd->clk_bypass->rate;
 
-	v = __raw_readl(dd->mult_div1_reg);
-	m = v & dd->mult_mask;
-	m >>= __ffs(dd->mult_mask);
-
-	v = __raw_readl(dd->frac_mult_reg);
-	frac_m = v & dd->frac_mult_mask;
-	frac_m >>= __ffs(dd->frac_mult_mask);
+	v = __raw_readl(dd->base + ADPLLJ_MN2DIV);
+	m = v & TI814X_ADPLL_M_MULT_MASK;
+	m >>= __ffs(TI814X_ADPLL_M_MULT_MASK);
+
+	v = __raw_readl(dd->base + ADPLLJ_FRACDIV);
+	frac_m = v & TI814X_ADPLL_FRACT_MULT_MASK;
+	frac_m >>= __ffs(TI814X_ADPLL_FRACT_MULT_MASK);
 
 	num = (unsigned long long)((m << 18) + frac_m);
 
-	v = __raw_readl(dd->div_m2n_reg);
-	n = v & dd->div_n_mask;
-	n >>= __ffs(dd->div_n_mask);
-	m2 = v & dd->div_m2_mask;
-	m2 >>= __ffs(dd->div_m2_mask);
+	v = __raw_readl(dd->base + ADPLLJ_M2NDIV);
+
+	if (dd->flags & TI814X_ADPLL_LJ_TYPE)
+		div_n_mask = TI814X_ADPLL_N_DIV_MASK;
+	else
+		div_n_mask = TI814X_ADPLLS_N_DIV_MASK;
+
+	n = v & div_n_mask;
+	n >>= __ffs(div_n_mask);
+	m2 = v & TI814X_ADPLL_M2_DIV_MASK;
+	m2 >>= __ffs(TI814X_ADPLL_M2_DIV_MASK);
 
 	den = (unsigned long long)(((n+1) << 18)*m2);
 	dpll_rate = (unsigned long long)(dd->clk_ref->rate * num);
@@ -626,9 +641,9 @@
 	if (omap_rev() == TI8148_REV_ES1_0) {
 		return ti814x_get_dpll_rate(clk);
 	} else {
-		v = __raw_readl(dd->div_m2n_reg);
-		m2 = v & dd->div_m2_mask;
-		m2 >>= __ffs(dd->div_m2_mask);
+		v = __raw_readl(dd->base + ADPLLJ_M2NDIV);
+		m2 = v & TI814X_ADPLL_M2_DIV_MASK;
+		m2 >>= __ffs(TI814X_ADPLL_M2_DIV_MASK);
 
 		return ti814x_get_dpll_rate(clk)*m2;
 	}
@@ -649,17 +664,17 @@
 
 	/* Enable CLKOUT */
 	v = __raw_readl(dd->control_reg);
-	v |= (dd->enable_mask);
+	v |= (TI814X_EN_ADPLL_CLKOUT_MASK);
 	__raw_writel(v, dd->control_reg);
 
 	/* Check if DPLL is disabled before
 	 * If yes, DPLL will be in  LOW POWERMODE, bringout of LP */
-	v = (__raw_readl(dd->idlest_reg) &
+	v = (__raw_readl(dd->base + ADPLLJ_STATUS) &
 			TI814X_ADPLL_STBYRET_ACK_MASK);
 	v >>= __ffs(TI814X_ADPLL_STBYRET_ACK_MASK);
 	if(v) {
 		v = __raw_readl(dd->control_reg);
-		v &= ~(1 << dd->stby_ret_bit);
+		v &= ~(1 << TI814X_EN_ADPLL_STBYRET_SHIFT);
 		__raw_writel(v, dd->control_reg);
 
 		r = _ti814x_wait_dpll_ret_ack(clk, ST_ADPLL_ACTIVE);
@@ -696,7 +711,7 @@
 
 	/* Disable CLKOUT, synchronous */
 	v = __raw_readl(dd->control_reg);
-	v &= ~(dd->enable_mask);
+	v &= ~(TI814X_EN_ADPLL_CLKOUT_MASK);
 	__raw_writel(v, dd->control_reg);
 
 	/* Drive DPLL in to retention/Low power stop */
@@ -717,7 +732,7 @@
 				u8 m2, u8 dco, bool enterbypass)
 {
 	struct dpll_data *dd = clk->dpll_data;
-	u32 v;
+	u32 v, div_n_mask;
 	u8 sd_div = 0;
 	int ret = 0;
 
@@ -736,30 +751,36 @@
 	}
 
 	/* Set DPLL multiplier (m)*/
-	v = __raw_readl(dd->mult_div1_reg);
-	v &= ~(dd->mult_mask);
-	v |= m << __ffs(dd->mult_mask);
-	__raw_writel(v, dd->mult_div1_reg);
+	v = __raw_readl(dd->base + ADPLLJ_MN2DIV);
+	v &= ~(TI814X_ADPLL_M_MULT_MASK);
+	v |= m << __ffs(TI814X_ADPLL_M_MULT_MASK);
+	__raw_writel(v, dd->base + ADPLLJ_MN2DIV);
 
 	/* Set DPLL Fractional multiplier (f) */
-	v = __raw_readl(dd->frac_mult_reg);
-	v &= ~(dd->frac_mult_mask);
-	v |= frac_m << __ffs(dd->frac_mult_mask);
-	__raw_writel(v, dd->frac_mult_reg);
+	v = __raw_readl(dd->base + ADPLLJ_FRACDIV);
+	v &= ~(TI814X_ADPLL_FRACT_MULT_MASK);
+	v |= frac_m << __ffs(TI814X_ADPLL_FRACT_MULT_MASK);
+	__raw_writel(v, dd->base + ADPLLJ_FRACDIV);
 
 	/* Set DPLL pre-divider (n) and post-divider (m2)*/
-	v = __raw_readl(dd->div_m2n_reg);
-	v &= ~(dd->div_m2_mask | dd->div_n_mask);
-	v |= m2 << __ffs(dd->div_m2_mask);
-	v |= n << __ffs(dd->div_n_mask);
-	__raw_writel(v, dd->div_m2n_reg);
 
-	if (dd->sddiv_mask) {
+	if (dd->flags & TI814X_ADPLL_LJ_TYPE)
+		div_n_mask = TI814X_ADPLL_N_DIV_MASK;
+	else
+		div_n_mask = TI814X_ADPLLS_N_DIV_MASK;
+
+	v = __raw_readl(dd->base + ADPLLJ_M2NDIV);
+	v &= ~(TI814X_ADPLL_M2_DIV_MASK | div_n_mask);
+	v |= m2 << __ffs(TI814X_ADPLL_M2_DIV_MASK);
+	v |= n << __ffs(div_n_mask);
+	__raw_writel(v, dd->base + ADPLLJ_M2NDIV);
+
+	if (dd->flags & TI814X_ADPLL_LJ_TYPE) {
 		_lookup_sddiv(clk, &sd_div, m, n+1);
-		v = __raw_readl(dd->frac_mult_reg);
-		v &= ~(dd->sddiv_mask);
-		v |= sd_div << __ffs(dd->sddiv_mask);
-		__raw_writel(v, dd->frac_mult_reg);
+		v = __raw_readl(dd->base + ADPLLJ_FRACDIV);
+		v &= ~(TI814X_ADPLLJ_SDDIV_MASK);
+		v |= sd_div << __ffs(TI814X_ADPLLJ_SDDIV_MASK);
+		__raw_writel(v, dd->base + ADPLLJ_FRACDIV);
 	}
 
 	/* configure SELECTFREQDCO HS2/HS1 */
@@ -773,26 +794,26 @@
 	}
 
 	/* Assert and de-assert TENABLE to load M and N values */
-	v = __raw_readl(dd->load_mn_reg);
+	v = __raw_readl(dd->base + ADPLLJ_TENABLE);
 	v |= (1 << TI814X_ADPLL_LOAD_MN_SHIFT);
-	__raw_writel(v, dd->load_mn_reg);
+	__raw_writel(v, dd->base + ADPLLJ_TENABLE);
 
 	ndelay(1);
 
-	v = __raw_readl(dd->load_mn_reg);
+	v = __raw_readl(dd->base + ADPLLJ_TENABLE);
 	v &= ~(1 << TI814X_ADPLL_LOAD_MN_SHIFT);
-	__raw_writel(v, dd->load_mn_reg);
+	__raw_writel(v, dd->base + ADPLLJ_TENABLE);
 
 	/* Assert and de-assert  TENABLEDIV to load M2 and N2 values */
-	v = __raw_readl(dd->load_m2n2_reg);
+	v = __raw_readl(dd->base + ADPLLJ_TENDIV);
 	v |= (1 << TI814X_ADPLL_LOAD_M2N2_SHIFT);
-	__raw_writel(v, dd->load_m2n2_reg);
+	__raw_writel(v, dd->base + ADPLLJ_TENDIV);
 
 	ndelay(1);
 
-	v = __raw_readl(dd->load_m2n2_reg);
+	v = __raw_readl(dd->base + ADPLLJ_TENDIV);
 	v &= ~(1 << TI814X_ADPLL_LOAD_M2N2_SHIFT);
-	__raw_writel(v, dd->load_m2n2_reg);
+	__raw_writel(v, dd->base + ADPLLJ_TENDIV);
 
 	v = __raw_readl(dd->control_reg);
 	v |= (1 << TI814X_ADPLL_CLKOUTLDOEN_SHIFT);
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clock814x_data.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clock814x_data.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clock814x_data.c	2014-08-07 07:58:50.000000000 -0600
@@ -112,6 +112,7 @@
 
 static struct clk rtc_divider_ck = {
 	.name		= "rtc_divider_ck",
+	.parent		= &osc0_clkin_ck,
 	.ops		= &clkops_null,
 	.rate		= 32768,
 	.flags		= RATE_IN_TI814X | RATE_IN_DM385,
@@ -281,6 +282,9 @@
 	{ .div = 0 },
 };
 
+/* value selection for b3 and c1 dividers of PLL_VIDEO1
+ * reset value of the register is 0x3 which is unused so re-program it to div 1
+ */
 static const struct clksel_rate div4_b3c1_rates[] = {
 	{ .div = 1, .val = 0, .flags = RATE_IN_TI814X | RATE_IN_DM385 },
 	{ .div = 2, .val = 1, .flags = RATE_IN_TI814X | RATE_IN_DM385 },
@@ -343,6 +347,13 @@
 };
 
 /*********************************Main Module*********************************/
+static struct clk adc_clk_ck = {
+	.name		= "adc_clk_ck",
+	.parent		= &osc0_clkin_ck,
+	.ops		= &clkops_null,
+	.recalc		= &followparent_recalc,
+};
+
 /* ARM DPLL/Modena/Sabertooth */
 static const struct clksel arm_dpll_mux_sel[] = {
 	{ .parent = &osc0_clkin_ck, .rates = div_1_0_rates },
@@ -370,6 +381,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &arm_dpll_clkin_ck,
 	.clk_ref	= &arm_dpll_clkin_ck,
+	.pre_div_n	= TI814X_MODENA_ADPLLS_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(MODENA_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(MODENA_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -423,6 +437,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &osc0_clkin_ck,
 	.clk_ref	= &osc0_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(DSP_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(DSP_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -475,6 +492,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &osc0_clkin_ck,
 	.clk_ref	= &osc0_clkin_ck,
+	.pre_div_n      = TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(SGX_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(SGX_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -567,6 +587,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &osc0_clkin_ck,
 	.clk_ref	= &osc0_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_2,
+	.base		= TI814X_ADPLL_REGADDR(IVA_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(IVA_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -655,6 +678,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &l3_dpll_clkin_ck,
 	.clk_ref	= &l3_dpll_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_4,
+	.base		= TI814X_ADPLL_REGADDR(L3_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(L3_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -1334,6 +1360,22 @@
 };
 
 /* PRCM Clock(final) */
+static struct clk gpio5_ick = {
+	.name		= "gpio5_ick",
+	.parent		= &gpio234_ick,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
+/* GPIO5 Clock(final) - same as GPIO1 */
+static struct clk gpio6_ick = {
+	.name		= "gpio6_ick",
+	.parent		= &gpio234_ick,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
 static struct clk prcm_ick = {
 	.name		= "prcm_ick",
 	.parent		= &sysclk6_ck,
@@ -1492,6 +1534,14 @@
 	.clkdm_name	= "alwon_l3_slow_clkdm",
 	.recalc		= &followparent_recalc,
 };
+static struct clk vlynq_ick = {
+	.name		= "vlynq_ick",
+	.parent		= &sysclk6_ck,
+	.ops		= &clkops_ti81xx_dflt_wait,
+	.enable_reg	= TI81XX_CM_ALWON_VLYNQ_CLKCTRL,
+	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
+	.recalc		= &followparent_recalc,
+};
 
 /* SmartReflex 0 mclk Clock(final) */
 static struct clk sr1_ick = {
@@ -1658,6 +1708,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &osc0_clkin_ck,
 	.clk_ref	= &osc0_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_2,
+	.base		= TI814X_ADPLL_REGADDR(ISS_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(ISS_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -1754,6 +1807,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &osc0_clkin_ck,
 	.clk_ref	= &osc0_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_4,
+	.base		= TI814X_ADPLL_REGADDR(DSS_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(DSS_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -1872,6 +1928,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &usb_dpll_clkin_ck,
 	.clk_ref	= &usb_dpll_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(USB_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(USB_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2173,7 +2232,7 @@
 	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
 	.clksel		= uart456_mux_sel,
 	.clksel_reg	= TI814X_PLL_CMGC_MCBSP_UART_CLKSRC,
-	.clksel_mask	= TI814X_UART3_MASK,
+	.clksel_mask	= TI814X_UART4_MASK,
 	.clkdm_name	= "alwon_l3_slow_clkdm",
 	.recalc		= &omap2_clksel_recalc,
 	.set_rate	= &ti814x_clksel_set_rate,
@@ -2188,7 +2247,22 @@
 	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
 	.clksel		= uart456_mux_sel,
 	.clksel_reg	= TI814X_PLL_CMGC_MCBSP_UART_CLKSRC,
-	.clksel_mask	= TI814X_UART3_MASK,
+	.clksel_mask	= TI814X_UART5_MASK,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &omap2_clksel_recalc,
+	.set_rate	= &ti814x_clksel_set_rate,
+};
+
+/* UART 6,7 Functional Clock ti811x (final) */
+static struct clk uart78_fck = {
+	.name		= "uart78_fck",
+	.init		= &omap2_init_clksel_parent,
+	.ops		= &clkops_ti81xx_dflt_wait,
+	.enable_reg	= TI814X_CM_ALWON_UART_5_CLKCTRL,
+	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
+	.clksel		= uart456_mux_sel,
+	.clksel_reg	= TI814X_PLL_CMGC_MCBSP_UART_CLKSRC,
+	.clksel_mask	= TI814X_UART5_MASK,
 	.clkdm_name	= "alwon_l3_slow_clkdm",
 	.recalc		= &omap2_clksel_recalc,
 	.set_rate	= &ti814x_clksel_set_rate,
@@ -2253,6 +2327,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &ddr_dpll_clkin_ck,
 	.clk_ref	= &ddr_dpll_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_2,
+	.base		= TI814X_ADPLL_REGADDR(DDR_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(DDR_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2402,6 +2479,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &video0_dpll_clkin_ck,
 	.clk_ref	= &video0_dpll_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(VIDEO0_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(VIDEO0_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2462,6 +2542,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &video1_dpll_clkin_ck,
 	.clk_ref	= &video1_dpll_clkin_ck,
+	.pre_div_n	= TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(VIDEO1_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(VIDEO1_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2522,6 +2605,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &hdmi_dpll_clkin_ck,
 	.clk_ref	= &hdmi_dpll_clkin_ck,
+	.pre_div_n      = TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2,
+	.base		= TI814X_ADPLL_REGADDR(HDMI_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(HDMI_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2718,6 +2804,22 @@
 };
 
 /* HDVENC A MUX clock sel */
+static struct clk dtc0_logic_ck = {
+	.name		= "dtc0_logic_ck",
+	.parent		= &hd_venc_g_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
+/* DTC1 logic clock */
+static struct clk dtc1_logic_ck = {
+	.name		= "dtc1_logic_ck",
+	.parent		= &hd_venc_d_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
 static const struct clksel hd_venc_a_mux_sel[] = {
 	{ .parent = &hdmi_dpll_muxout_ck, .rates = div_1_0_rates },
 	{ .parent = &video1_dpll_ck, .rates = div_1_1_rates },
@@ -2849,6 +2951,9 @@
 	.div1_mask	= TI814X_ADPLL_N2_DIV_MASK,
 	.clk_bypass	= &audio_dpll_clkin_ck,
 	.clk_ref	= &audio_dpll_clkin_ck,
+	.pre_div_n      = TI814X_ADPLLJ_FIX_N,
+	.post_div_m2	= TI814X_ADPLL_POST_DIV_M2_2,
+	.base		= TI814X_ADPLL_REGADDR(AUDIO_PLL_BASE, ADPLLJ_BASE),
 	.control_reg	= TI814X_ADPLL_REGADDR(AUDIO_PLL_BASE, ADPLLJ_CLKCTRL),
 	.enable_mask	= TI814X_EN_ADPLL_CLKOUT_MASK,
 	.modes		= (1 << ADPLL_LOW_POWER_BYPASS) | (1 << ADPLL_LOCKED) |
@@ -2883,6 +2988,54 @@
 	.set_rate	= &ti814x_dpll_set_rate,
 };
 
+static const struct clksel ducati_mux_sel[] = {
+	{ .parent = &iss_dpll_ck, .rates = div_1_0_rates },
+	{ .parent = &sgx_dpll_ck, .rates = div_1_1_rates },
+	{ .parent = &video0_dpll_ck, .rates = div_1_2_rates },
+	{ .parent = &audio_dpll_ck, .rates = div_1_3_rates },
+	{ .parent = NULL}
+};
+
+/* Ducati func clk mux out */
+static struct clk ducati_mux_out_ck = {
+	.name		= "ducati_mux_out_ck",
+	.init		= &omap2_init_clksel_parent,
+	.ops		= &clkops_null,
+	.clksel		= ducati_mux_sel,
+	.clksel_reg	= TI811X_PLL_CMGC_DUCATI_CLKSRC,
+	.clksel_mask	= TI811X_DUCATI_CLKSEL_MASK,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &omap2_clksel_recalc,
+};
+
+/* Ducati mux out div2 Clock (final) */
+static struct clk ducati_mux_out_div2_ck = {
+	.name		= "ducati_mux_out_div2_ck",
+	.parent		= &ducati_mux_out_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.fixed_div	= 2,
+	.recalc		= &omap_fixed_divisor_recalc,
+};
+
+/* DSS fucntional clk selection mux */
+static const struct clksel dss_mux_sel[] = {
+	{ .parent = &iss_dpll_d2_ck, .rates = div_1_0_rates },
+	{ .parent = &audio_dpll_ck, .rates = div_1_1_rates },
+	{ .parent = NULL}
+};
+
+/* DSS func clk mux out */
+static struct clk dss_mux_out_ck = {
+	.name		= "dss_mux_out_ck",
+	.init		= &omap2_init_clksel_parent,
+	.ops		= &clkops_null,
+	.clksel		= dss_mux_sel,
+	.clksel_reg	= TI811X_PLL_CMGC_DSS_CLKSRC,
+	.clksel_mask	= TI811X_DSS_CLKSEL_MASK,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &omap2_clksel_recalc,
+};
 static const struct clksel sysclk18_a_div[] = {
 	{ .parent = &rtc_divider_ck, .rates = div8_rates },
 	{ .parent = NULL },
@@ -2946,6 +3099,13 @@
 	.recalc		= &followparent_recalc,
 };
 
+static struct clk rtcss_aux_ck = {
+	.name		= "rtcss_aux_ck",
+	.parent		= &sysclk18_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
 static const struct clksel sysclk19_b_div[] = {
 	{ .parent = &audio_dpll_clk2_ck, .rates = div8_rates },
 	{ .parent = NULL },
@@ -3032,9 +3192,7 @@
 static struct clk audio_prcm1_out_ck = {
 	.name		= "audio_prcm1_out_ck",
 	.init		= &omap2_init_clksel_parent,
-	.ops		= &clkops_ti81xx_dflt_wait,
-	.enable_reg	= TI81XX_CM_ALWON_MCBSP_CLKCTRL,
-	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
+	.ops		= &clkops_null,
 	.clksel		= audio_prcm_mux_sel,
 	.clksel_reg	= TI81XX_CM_DPLL_AUDIOCLK_MCBSP_CLKSEL,
 	.clksel_mask	= TI81XX_CLKSEL_0_1_MASK,
@@ -3055,7 +3213,9 @@
 static struct clk mcbsp_fck = {
 	.name		= "mcbsp_fck",
 	.init		= &omap2_init_clksel_parent,
-	.ops		= &clkops_null,
+	.ops		= &clkops_ti81xx_dflt_wait,
+	.enable_reg	= TI81XX_CM_ALWON_MCBSP_CLKCTRL,
+	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
 	.clksel		= mcbsp_clks_mux_sel,
 	.clksel_reg	= TI814X_PLL_CMGC_MCBSP_UART_CLKSRC,
 	.clksel_mask	= TI814X_MCBSP_MASK,
@@ -3113,6 +3273,7 @@
 static struct clk hdmi_i2s_ck = {
 	.name		= "hdmi_i2s_ck",
 	.init		= &omap2_init_clksel_parent,
+	.ops		= &clkops_null,
 	.clksel		= audio_prcm_mux_sel,
 	.ops		= &clkops_ti81xx_dflt_wait,
 	.enable_reg	= TI814X_CM_HDVPSS_HDMI_CLKCTRL,
@@ -3137,7 +3298,9 @@
 static struct clk hdmi_i2s_fck = {
 	.name		= "hdmi_i2s_fck",
 	.init		= &omap2_init_clksel_parent,
-	.ops		= &clkops_null,
+	.ops		= &clkops_ti81xx_dflt_wait,
+	.enable_reg	= TI814X_CM_HDVPSS_HDMI_CLKCTRL,
+	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
 	.clksel		= hdmi_i2s_mclk_mux_sel,
 	.clksel_reg	= TI814X_PLL_CMGC_HDMI_I2S_CLKSRC,
 	.clksel_mask	= TI814X_HDMI_I2S_CLKSRC_MASK,
@@ -3172,8 +3335,8 @@
 	.enable_reg	= TI814X_CM_ALWON_ATL_CLKCTRL,
 	.enable_bit	= TI81XX_MODULEMODE_SWCTRL,
 	.clksel		= atlp_clk_mux_sel,
-	.clksel_reg	= TI814X_PLL_CMGC_HDMI_I2S_CLKSRC,
-	.clksel_mask	= TI814X_HDMI_I2S_CLKSRC_MASK,
+	.clksel_reg	= TI814X_PLL_CMGC_MLB_ATL_CLKSRC,
+	.clksel_mask	= TI814X_MLB_ATL_ATL_MASK,
 	.clkdm_name	= "alwon_l3_slow_clkdm",
 	.recalc		= &omap2_clksel_recalc,
 };
@@ -3228,6 +3391,24 @@
 	.recalc		= &followparent_recalc,
 };
 
+/* gpio4 debounce clk - same as gpio1 */
+static struct clk gpio5_dbck = {
+	.name		= "gpio5_dbck",
+	.parent		= &gpio234_dbck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
+/* gpio5 debounce clk - same as gpio1 */
+static struct clk gpio6_dbck = {
+	.name		= "gpio6_dbck",
+	.parent		= &gpio234_dbck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
 /* RTC Func clk (MUX out) */
 static struct clk rtc_fck = {
 	.name		= "rtc_fck",
@@ -3291,6 +3472,15 @@
 	.recalc		= &followparent_recalc,
 };
 
+/* arm optional Func clk (MUX out) */
+static struct clk arm_opt_fck = {
+	.name		= "arm_opt_fck",
+	.parent		= &rtc_divider_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
 static const struct clksel gpt0to7_fclk_mux_sel[] = {
 	{ .parent = &sysclk18_ck, .rates = div_1_0_rates },
 	{ .parent = &xref0_ck, .rates = div_1_1_rates },
@@ -3821,7 +4011,6 @@
 	{ .parent = NULL}
 };
 
-/* RMII ref clk */
 static struct clk emac_rmii_fck = {
 	.name		= "emac_rmii_fck",
 	.init		= &omap2_init_clksel_parent,
@@ -3842,6 +4031,26 @@
 	.recalc		= &followparent_recalc,
 };
 
+/************ ICSS subsystem clocks - TI811X *********************************/
+
+/* ICSS OCP clk */
+static struct clk icss_ocp_ck = {
+	.name		= "icss_ocp_ck",
+	.parent		= &l3_fast_ick,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
+/* ICSS OEP clk */
+static struct clk icss_oep_ck = {
+	.name		= "icss_oep_ck",
+	.parent		= &cpts_rft_clk_ck,
+	.ops		= &clkops_null,
+	.clkdm_name	= "alwon_l3_slow_clkdm",
+	.recalc		= &followparent_recalc,
+};
+
 /************ Watchdog, Secure timer and Sync timer Functional clocking *******/
 
 static const struct clksel wdt0to1_fclk_mux_sel[] = {
@@ -3891,7 +4100,15 @@
 
 static const struct clksel clkout0to3_385_mux_sel[] = {
 	{ .parent = &dummy_clk_ck, .rates = div_1_0_rates },
-	{ .parent = &hdvicp_dpll_ck, .rates = div_1_1_rates },
+	{ .parent = &usb_dpll_ck, .rates = div_1_1_rates },
+	{ .parent = &video0_dpll_ck, .rates = div_1_2_rates },
+	{ .parent = &rtc_divider_ck, .rates = div_1_3_rates },
+	{ .parent = NULL}
+};
+
+static const struct clksel clkout0to3_811x_mux_sel[] = {
+	{ .parent = &pciess_125m_ck, .rates = div_1_0_rates },
+	{ .parent = &usb_dpll_ck, .rates = div_1_1_rates },
 	{ .parent = &video0_dpll_ck, .rates = div_1_2_rates },
 	{ .parent = &rtc_divider_ck, .rates = div_1_3_rates },
 	{ .parent = NULL}
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/common.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/common.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/common.c	2014-08-06 15:51:16.093549484 -0600
@@ -16,6 +16,9 @@
 #include <linux/init.h>
 #include <linux/clk.h>
 #include <linux/io.h>
+#include <linux/memblock.h>
+
+#include <asm/mach/map.h>
 
 #include <plat/common.h>
 #include <plat/board.h>
@@ -28,6 +31,46 @@
 
 /* Global address base setup code */
 
+phys_addr_t dram_sync_phys;
+void __iomem *dram_sync;
+void __iomem *sram_sync;
+
+static int __init omap_barriers_init(void)
+{
+	struct map_desc ram_io_desc[2];
+	u32 size = ALIGN(PAGE_SIZE, SZ_1M);
+
+	if (!cpu_is_ti81xx())
+		return -ENODEV;
+
+	if (!dram_sync_phys) {
+		pr_err("%s: failed to reserve ddr\n", __func__);
+		return -ENOMEM;
+	}
+
+	ram_io_desc[0].virtual = TI81XX_DRAM_BARRIER_VA;
+	ram_io_desc[0].pfn = __phys_to_pfn(dram_sync_phys);
+	ram_io_desc[0].length = size;
+	ram_io_desc[0].type = MT_STRONGLY_ORDERED;
+
+	ram_io_desc[1].virtual = TI81XX_SRAM_BARRIER_VA;
+	ram_io_desc[1].pfn = __phys_to_pfn(TI81XX_OCMC0_BASE);
+	ram_io_desc[1].length = size;
+	ram_io_desc[1].type = MT_STRONGLY_ORDERED;
+
+	iotable_init(ram_io_desc, ARRAY_SIZE(ram_io_desc));
+
+	dram_sync = (void __iomem *)ram_io_desc[0].virtual;
+	sram_sync = (void __iomem *)ram_io_desc[1].virtual;
+
+	pr_info("TI81XX: Map 0x%08lx to 0x%08lx for dram barrier\n",
+		(long unsigned int) dram_sync_phys, ram_io_desc[0].virtual);
+	pr_info("TI81XX: Map 0x%08lx to 0x%08lx for sram barrier\n",
+		(long unsigned int) TI81XX_OCMC0_BASE, ram_io_desc[1].virtual);
+
+	return 0;
+}
+core_initcall(omap_barriers_init);
 #if defined(CONFIG_ARCH_OMAP2) || defined(CONFIG_ARCH_OMAP3)
 
 static void __init __omap2_set_globals(struct omap_globals *omap2_globals)
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux.c	2014-08-07 07:58:50.000000000 -0600
@@ -441,6 +441,69 @@
 	} while (i-- > 0);
 }
 
+#ifdef CONFIG_ARCH_TI81XX
+static inline void ti81xx_mux_decode(struct seq_file *s, u32 val)
+{
+	char *flags[OMAP_MUX_MAX_NR_FLAGS];
+	char mode[sizeof("OMAP_MUX_MODE") + 1];
+	int i = -1;
+
+	if (cpu_is_ti816x()) {
+		sprintf(mode, "TI81XX_MUX_MODE%d", val & 0x7);
+		i++;
+		flags[i] = mode;
+
+		switch(val & TI816X_PIN_STATE_MASK ) {
+		case(TI816X_PIN_PULL_UP) :
+			OMAP_MUX_TEST_FLAG(val, TI816X_PIN_PULL_UP);
+			break;
+		case(TI816X_PIN_PULL_DOWN) :
+			OMAP_MUX_TEST_FLAG(val, TI816X_PIN_PULL_DOWN);
+			break;
+		case(TI816X_PIN_PULL_DIS) :
+			OMAP_MUX_TEST_FLAG(val, TI816X_PIN_PULL_DIS);
+			break;
+		default:
+			break;
+
+		};
+	}
+
+	if (cpu_is_ti814x()) {
+		/* TI811X has 11 modes hence masking with 0xfff */
+		sprintf(mode, "TI81XX_MUX_MODE%d", ffs(val & 0xfff) - 1);
+		i++;
+		flags[i] = mode;
+
+		switch(val & TI814X_PIN_STATE_MASK ) {
+		case (TI814X_PIN_INPUT_PULL_DIS) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_INPUT_PULL_DIS);
+			break;
+		case (TI814X_PIN_INPUT_PULL_UP) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_INPUT_PULL_UP );
+			break;
+		case (TI814X_PIN_INPUT_PULL_DOWN) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_INPUT_PULL_DOWN);
+			break;
+		case (TI814X_PIN_OUTPUT_PULL_UP) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_OUTPUT_PULL_DIS);
+			break;
+		case (TI814X_PIN_OUTPUT_PULL_DOWN) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_OUTPUT_PULL_DIS);
+			break;
+		case (TI814X_PIN_OUTPUT_PULL_DIS) :
+			OMAP_MUX_TEST_FLAG(val, TI814X_PIN_OUTPUT_PULL_DIS);
+			break;
+		}
+	}
+	do {
+		seq_printf(s, "%s", flags[i]);
+		if (i > 0)
+			seq_printf(s, " | ");
+	} while (i-- > 0);
+
+}
+#endif /* CONFIG_ARCH_TI81XX */
 #define OMAP_MUX_DEFNAME_LEN	32
 
 static int omap_mux_dbg_board_show(struct seq_file *s, void *unused)
@@ -596,7 +659,7 @@
 	if (!partition)
 		return -ENODEV;
 
-	omap_mux_write(partition, (u16)val, m->reg_offset);
+	omap_mux_write(partition, (u32)val, m->reg_offset);
 	*ppos += count;
 
 	return count;
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux814x.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux814x.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/mux814x.c	2014-08-06 15:51:16.097549484 -0600
@@ -21,158 +21,320 @@
 
 #ifdef CONFIG_OMAP_MUX
 
-#define _TI814X_MUXENTRY(M0, g, m0, m1, m2, m3, m4, m5, m6, m7)		\
-{									\
-	.reg_offset	= (TI814X_CONTROL_PADCONF_##M0##_OFFSET),	\
-	.gpio		= (g),						\
-	.muxnames	= { m0, m1, m2, m3, m4, m5, m6, m7 },		\
+/* On J5Eco, each pin can have up to 11 functions/modes,
+ * for e.g xref_clk0 has a 9th mode
+ */
+#define _TI814X_MUXENTRY(M0, g, m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, \
+									m11) \
+{									     \
+	.reg_offset	= (TI814X_CONTROL_PADCONF_##M0##_OFFSET),	     \
+	.gpio		= (g),						     \
+	.muxnames	= { m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, m10,     \
+								    m11 },   \
 }
 
 /*
  * Superset of all mux modes for TI814X
  */
 static struct omap_mux __initdata ti814x_muxmodes[] = {
+
+	/* NOTE: some functional modes of a single pin are different from ti814x
+	 * on some platforms, for such pins there will be more than one entry
+	 * added, one for each platform, modes that are same as on ti814x
+	 * are not repeated in the duplicate entry of the same pin/signal to
+	 * avoid duplication of muxmodes. Modes that are new/replacement of old
+	 * ones are added to the later entries of the pin
+	 */
 	_TI814X_MUXENTRY(MMC1_CLK, 0,
-			"mmc1_clk", NULL, NULL, NULL,
+			"mmc1_clk", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC1_CLK, 0,
+			"mmc1_clk_ti811x", NULL, "pr1_mii_mt1_clk_mux0", NULL,
+			NULL, NULL, NULL, "gpio4_11", NULL, NULL, NULL,
+			NULL), /* for TI811X only*/
+	_TI814X_MUXENTRY(MMC1_CMD, 0,
+			"mmc1_cmd_mux0", NULL, NULL, NULL, NULL, NULL, NULL,
+			"gpio0_0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC1_CMD, 0,
-			"mmc1_cmd_mux0", NULL, NULL,
-			NULL, NULL, NULL, NULL, "gpio0_0"),
+			"mmc1_cmd_mux0_ti811x", NULL, "pr1_mii1_txd3_mux0",
+			NULL, NULL, "ehrpwm1_tripzone_input_mux0", NULL, NULL,
+			NULL, NULL, NULL, NULL), /*for TI811X only*/
 	_TI814X_MUXENTRY(MMC1_DAT0, 0,
-			"mmc1_dat0", NULL, NULL, NULL,
+			"mmc1_dat0", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC1_DAT0, 0,
+			"mmc1_dat0_ti811x", NULL, "pr1_mii1_txd2_mux0", NULL,
+			NULL, NULL, NULL, "gpio4_12", NULL, NULL, NULL,
+			NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MMC1_DAT1, 0,
-			"mmc1_dat1", NULL, NULL, NULL,
+			"mmc1_dat1", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC1_DAT1, 0,
+			"mmc1_dat1_ti811x", NULL, "pr1_mii1_txd1_mux0", NULL,
+			NULL, "ehrpwm1A_mux0", NULL, "gpio4_13",
+			NULL, NULL, NULL, NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MMC1_DAT2, 0,
-			"mmc1_dat2", NULL, NULL, NULL,
+			"mmc1_dat2", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC1_DAT2, 0,
+			"mmc1_dat2_ti811x", NULL, "pr1_mii1_txd0_mux0", NULL,
+			NULL, "ehrpwm1B_mux0", NULL, "gpio4_14",
+			NULL, NULL, NULL, NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MMC1_DAT3, 0,
-			"mmc1_dat3", NULL, NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mmc1_dat3_ti811x", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC1_DAT3, 0,
+			"mmc1_dat3_ti811x", NULL, "pr1_mii1_crs_mux0",
+			"pr1_pru0_pru_r30_16_mux1", "pr1_pru0_pru_r31_16_mux1",
+			"eQEP2_index_mux0", NULL, "gpio4_15",
+			NULL, NULL, NULL, NULL), /* for TI811X only */
+	_TI814X_MUXENTRY(OSC_WAKE, 0,
+			"osc_wake", "spi1_cs1", NULL, NULL, NULL, NULL,
+			"timer5_mux1", "gpio1_07_mux0",	NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(OSC_WAKE, 0,
-			"osc_wake", "spi1_cs1", NULL, NULL,
-			NULL, NULL, "timer5_mux1", "gpio1_07_mux0"),
+			"osc_wake_ti811x", NULL, "pr1_mii1_crs_mux2",
+			"pr1_pru0_pru_r30_16_mux0", "pr1_pru0_pru_r31_16_mux0",
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL), /* for TI811X only */
 
 	/* sc1_xxx mux options below are not on DM385 */
 	_TI814X_MUXENTRY(MMC0_CLK, 0,
-			"mmc0_clk", NULL, NULL, "sc1_c4",
-			NULL, NULL, NULL, "gpio0_1"),
+			"mmc0_clk", NULL, NULL, "sc1_c4", NULL, NULL, NULL,
+			"gpio0_1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MMC0_CLK, 0,
+			"mmc0_clk_ti811x", NULL, NULL, NULL, NULL,
+			"ehrpwm2A_mux0", NULL, NULL, NULL, NULL, NULL,
+			NULL),/* TI811X only */
+	_TI814X_MUXENTRY(MMC0_CMD, 0,
+			"mmc0_cmd", "mmc1_cmd_mux1", NULL, "sc1_det", NULL,
+			NULL, NULL, "gpio0_2", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC0_CMD, 0,
-			"mmc0_cmd", "mmc1_cmd_mux1", NULL, "sc1_det",
-			NULL, NULL, NULL, "gpio0_2"),
+			"mmc0_cmd_ti811x", NULL, NULL, NULL, NULL,
+			"ehrpwm2B_mux0", NULL, NULL, NULL, NULL, NULL,
+			NULL), /* for TI811X only */
+	_TI814X_MUXENTRY(MMC0_DAT0, 0,
+			"mmc0_dat0", "mmc1_dat4", NULL, "sc1_data", NULL, NULL,
+			NULL, "gpio0_3", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC0_DAT0, 0,
-			"mmc0_dat0", "mmc1_dat4", NULL, "sc1_data",
-			NULL, NULL, NULL, "gpio0_3"),
+			"mmc0_dat0_ti811x", NULL, NULL, NULL, NULL,
+			"ehrpwm2_tripzone_input_mux0", NULL, NULL, NULL, NULL,
+			NULL, NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MMC0_DAT1, 0,
 			"mmc0_dat1", "mmc1_dat5", NULL, "sc1_clk",
-			NULL, NULL, NULL, "gpio0_4"),
+			NULL, NULL, NULL, "gpio0_4", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC0_DAT2, 0,
-			"mmc0_dat2", "mmc1_dat6", NULL, "sc1_rst",
-			NULL, NULL, NULL, "gpio0_5"),
+			"mmc0_dat2", "mmc1_dat6", NULL, "sc1_rst", NULL, NULL,
+			NULL, "gpio0_5", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC0_DAT3, 0,
 			"mmc0_dat3", "mmc1_dat7", NULL, "sc1_vccen",
-			NULL, NULL, NULL, "gpio0_6"),
+			NULL, NULL, NULL, "gpio0_6", NULL, NULL, NULL, NULL),
 
 	/* mcasp3/4/5_xxx mux options below are not on DM385 */
 	_TI814X_MUXENTRY(XREF_CLK0, 0,
 			"xref_clk0", "mcasp0_axr_7_mux1", "mcasp0_ahclkx",
 			"mcasp3_ahclkx", "atlclkout1", "atlclkout0", "vic0",
-			"usb1_drvvbus"),
+			"usb1_drvvbus", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(XREF_CLK0, 0,
+			"xref_clk0", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, "pr1_pru0_pru_r31_16_mux2", NULL, NULL, NULL),
 	_TI814X_MUXENTRY(XREF_CLK1, 0,
 			"xref_clk1", "mcasp0_axr_8_mux1", "mcasp1_ahclkx",
 			"mcasp4_ahclkx", "atlclkout2", "xdma_evt_3_mux1",
-			"timer2_mux1", "gpio0_8"),
+			"timer2_mux1", "gpio0_8", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(XREF_CLK2, 0,
 			"xref_clk2", "mcasp0_axr_9_mux1", "mcasp2_ahclkx",
 			"mcasp5_ahclkx", "atlclkout3", "xdma_evt_2_mux1",
-			"timer3_mux1", "gpio0_9"),	/* Not for DM385 */
+			"timer3_mux1", "gpio0_9", NULL, NULL, NULL,
+			NULL),/* Not for DM385 */
 	_TI814X_MUXENTRY(XREF_CLK2, 0,
-			"xref_clk2", "mcasp0_axr_9_mux1", "mcasp2_ahclkx",
-			"sata_act1_led_mux0", "atlclkout3", "xdma_evt_2_mux1",
-			"timer3_mux1", "gpio0_9"),	/* DM385 only */
+			"xref_clk2_ti813x", NULL, NULL,	"sata_act1_led_mux0",
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL), /* DM385 only */
 	_TI814X_MUXENTRY(MCASP0_ACLKX, 0,
-			"mcasp0_aclkx", NULL, NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp0_aclkx", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_ACLKX, 0,
+			"mcasp0_aclkx_ti811x", NULL, "pr1_mii1_rxd3_mux0",
+			"pr1_pru0_pru_r31_0", "pr1_pru0_pru_r30_0", NULL,
+			"eQEP1A_in_mux0", NULL,	NULL, NULL, NULL,
+			NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_FSX, 0,
-			"mcasp0_fsx", NULL, NULL, NULL,
+			"mcasp0_fsx", NULL, NULL, NULL,	NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_FSX, 0,
+			"mcasp0_fsx_ti811x", NULL, "pr1_mii1_rxd2_mux0",
+			"pr1_pru0_pru_r31_1", "pr1_pru0_pru_r30_1", NULL,
+			"eQEP1B_in_mux0", NULL,	NULL, NULL, NULL,
+			NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_CLKR, 0,
-			"mcasp0_aclkr", "mcasp5_axr2", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp0_aclkr", "mcasp5_axr2", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_CLKR, 0,
+			"mcasp0_aclkr_ti811x", NULL, "pr1_mii1_rxd1_mux0",
+			"pr1_pru0_pru_r31_2", "pr1_pru0_pru_r30_2", NULL,
+			"eQEP1_index_mux0", NULL, NULL, NULL, NULL,
+			NULL), /* for TI811X only*/
 	_TI814X_MUXENTRY(MCASP0_FSR, 0,
-			"mcasp0_fsr", "mcasp5_axr3", NULL, NULL,
-			NULL, NULL, NULL, NULL),
-
+			"mcasp0_fsr", "mcasp5_axr3", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_FSR, 0,
+			"mcasp0_fsr_ti811x", NULL, "pr1_mii1_rxd0_mux0",
+			"pr1_pru0_pru_r31_3", "pr1_pru0_pru_r30_3", NULL,
+			"eQEP1_strobe_mux0", NULL, NULL, NULL, NULL,
+			NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR0, 0,
-			"mcasp0_axr0", NULL, NULL, NULL,
-			NULL, "vic1", NULL, NULL),	/* vic1 not for DM385 */
-
+			"mcasp0_axr0", NULL, NULL, NULL, NULL, "vic1", NULL,
+			NULL, NULL, NULL, NULL, NULL),	/* vic1 not for DM385 */
+	_TI814X_MUXENTRY(MCASP0_AXR0, 0,
+			"mcasp0_axr0_ti811x", NULL, "pr1_mii_mr1_clk_mux0",
+			"pr1_pru0_pru_r31_4", "pr1_pru0_pru_r30_4", "vic1",
+			"ehrpwm1A_mux1", NULL, NULL, NULL, NULL,
+			NULL), /* for TI811X only */
+	_TI814X_MUXENTRY(MCASP0_AXR1, 0,
+			"mcasp0_axr1", NULL, NULL, NULL, NULL, "i2c3_scl_mux0",
+			NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP0_AXR1, 0,
-			"mcasp0_axr1", NULL, NULL, NULL,
-			NULL, "i2c3_scl_mux0", NULL, NULL),
+			"mcasp0_axr1_ti811x", NULL, "pr1_mii_mt0_clk_mux0",
+			"pr1_pru0_pru_r31_5", "pr1_pru0_pru_r30_5",
+			"i2c3_scl_mux0", "ehrpwm1B_mux1", NULL,
+			"mmc1_sdwp_mux1", NULL, NULL, NULL),/* for TI811X only*/
 	_TI814X_MUXENTRY(MCASP0_AXR2, 0,
-			"mcasp0_axr2", NULL, NULL, NULL,
-			NULL, "i2c3_sda_mux0", NULL, NULL),
+			"mcasp0_axr2", NULL, NULL, NULL, NULL, "i2c3_sda_mux0",
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR2, 0,
+			"mcasp0_axr2_ti811x", NULL, "pr1_mii0_rxlink_mux0",
+			"pr1_pru0_pru_r31_6", "pr1_pru0_pru_r30_6",
+			"i2c3_sda_mux0", "ehrpwm1_tripzone_input_mux1", NULL,
+			"mmc1_sdcd_mux1", NULL, NULL, NULL),/*for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR3, 0,
-			"mcasp0_axr3", NULL, NULL, "sc1_vppen",
-			NULL, NULL, NULL, NULL),	/* sci not on DM385 */
-
+			"mcasp0_axr3", NULL, NULL, "sc1_vppen",	NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),/*sci not on DM385*/
+	_TI814X_MUXENTRY(MCASP0_AXR3, 0,
+			"mcasp0_axr3_ti811x", NULL, "pr1_mii1_col_mux0", NULL,
+			"pr1_pru0_pru_r30_7", "pr1_pru0_pru_r31_7", NULL, NULL,
+			NULL, NULL, NULL, NULL), /* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR4, 0,
 			"mcasp0_axr4", "mcasp1_axr_8_mux0", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR4, 0,
+			"mcasp0_axr4_ti811x", NULL, "pr1_mii0_col_mux0",
+			"pr1_pru0_pru_r31_8", "pr1_pru0_pru_r30_8", NULL,
+			"eQEP2A_in_mux0", NULL,	NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR5, 0,
 			"mcasp0_axr5", "mcasp1_axr_9_mux0", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR5, 0,
+			"mcasp0_axr5_ti811x", NULL, "pr1_mii0_rxer_mux0",
+			"pr1_pru0_pru_r31_9", "pr1_pru0_pru_r30_9", NULL,
+			"eQEP2B_in_mux0", NULL,	NULL, NULL, NULL,
+			NULL),/*for TI811X only */
 
 	/* Following 4 groups not on DM385 */
 	_TI814X_MUXENTRY(MCASP0_AXR6, 0,
-			"mcasp0_axr6", "mcbsp_dr", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp0_axr6", "mcbsp_dr", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR6, 0,
+			"mcasp0_axr6_ti811x", NULL, NULL, "pr1_pru0_pru_r31_10",
+			"pr1_pru0_pru_r30_10", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR7, 0,
-			"mcasp0_axr_7_mux0", "mcbsp_dx", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp0_axr_7_mux0", "mcbsp_dx", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR7, 0,
+			"mcasp0_axr_7_mux0_ti811x", NULL, NULL,
+			"pr1_pru0_pru_r31_11", "pr1_pru0_pru_r30_11", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),/*for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR8, 0,
 			"mcasp0_axr_8_mux0", "mcbsp_fsx", "mcbsp_fsr_mux1",
-			NULL, NULL, NULL, NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR8, 0,
+			"mcasp0_axr_8_mux0_ti811x", NULL, NULL,
+			"pr1_pru0_pru_r31_12", "pr1_pru0_pru_r30_12", NULL,
+			NULL, NULL, "mmc0_sdwp", NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP0_AXR9, 0,
 			"mcasp0_axr_9_mux0", "mcbsp_clkx", "mcbsp_clkr_mux1",
-			NULL, NULL, NULL, NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP0_AXR9, 0,
+			"mcasp0_axr_9_mux0_ti811x", NULL, NULL,	NULL, NULL,
+			NULL, NULL, NULL, "mmc0_sdcd_mux1", NULL, NULL,
+			NULL),/* for TI811X only */
 
 	_TI814X_MUXENTRY(MCASP1_ACLKX, 0,
-			"mcasp1_aclkx", NULL, NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp1_aclkx", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_ACLKX, 0,
+			"mcasp1_aclkx_ti811x", NULL, "pr1_mii0_txen_mux0", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP1_FSX, 0,
-			"mcasp1_fsx", NULL, NULL, NULL,
+			"mcasp1_fsx", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
 			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_FSX, 0,
+			"mcasp1_fsx_ti811x", NULL, "pr1_mii0_txd3_mux0", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP1_CLKR, 0,
-			"mcasp1_aclkr", "mcasp1_axr4", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp1_aclkr", "mcasp1_axr4", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_CLKR, 0,
+			"mcasp1_aclkr_ti811x", NULL, "pr1_mii0_txd2_mux0", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP1_FSR, 0,
-			"mcasp1_fsr", "mcasp1_axr5", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp1_fsr", "mcasp1_axr5", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_FSR, 0,
+			"mcasp1_fsr_ti811x", NULL, "pr1_mii1_rxer_mux0", NULL,
+			NULL, NULL, "ehrpwm0A_mux0", NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 
 	/* sc0_xxx not on DM385 */
 	_TI814X_MUXENTRY(MCASP1_AXR0, 0,
-			"mcasp1_axr0", "mmc0_dat4", NULL, "sc0_rst",
-			NULL, NULL, NULL, NULL),
+			"mcasp1_axr0", "mmc0_dat4", NULL, "sc0_rst", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_AXR0, 0,
+			"mcasp1_axr0_ti811x", NULL, "pr1_mii1_rxdv_mux0", NULL,
+			NULL, NULL, "ehrpwm0B_mux0", NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP1_AXR1, 0,
-			"mcasp1_axr1", "mmc0_dat5", NULL, "sc0_det",
-			NULL, NULL, NULL, NULL),
+			"mcasp1_axr1", "mmc0_dat5", NULL, "sc0_det", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_AXR1, 0,
+			"mcasp1_axr1_ti811x", NULL, "pr1_mii1_txen_mux0", NULL,
+			NULL, NULL, "ehrpwm0_tripzone_input_mux0", NULL, NULL,
+			NULL, NULL, NULL),/* for TI811X only */
 
 	/* Following 4 groups not on DM385 */
 	_TI814X_MUXENTRY(MCASP1_AXR2, 0,
-			"mcasp1_axr2", "mcbsp_fsr_mux0", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp1_axr2", "mcbsp_fsr_mux0", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_AXR2, 0,
+			"mcasp1_axr2_ti811x", NULL, "eCAP2_in_PWM2_out_mux0",
+			NULL, NULL, "ehrpwm0_synci_mux0", "ehrpwm0_synco_mux0",
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP1_AXR3, 0,
-			"mcasp1_axr3", "mcbsp_clkr_mux0", NULL, NULL,
-			NULL, NULL, NULL, NULL),
+			"mcasp1_axr3", "mcbsp_clkr_mux0", NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP1_AXR3, 0,
+			"mcasp1_axr3_ti811x", NULL, "pr1_mii1_rxlink_mux0",
+			NULL, NULL, NULL, "eQEP0A_in", NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP2_CLKX, 0,
+			"mcasp2_aclkx", NULL, NULL, "sc0_c4", NULL, NULL, NULL,
+			"gpio0_10_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP2_CLKX, 0,
-			"mcasp2_aclkx", NULL, NULL, "sc0_c4",
-			NULL, NULL, NULL, "gpio0_10_mux1"),
+			"mcasp2_aclkx_ti811x", "pr1_mii0_txd1_mux0", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP2_FSX, 0,
+			"mcasp2_fsx", NULL, NULL, "sc0_data", NULL, NULL, NULL,
+			"gpio0_11_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP2_FSX, 0,
-			"mcasp2_fsx", NULL, NULL, "sc0_data",
-			NULL, NULL, NULL, "gpio0_11_mux1"),
+			"mcasp2_fsx_ti811x", "pr1_mii0_txd0_mux0", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 
 	/*
 	 * XXX: On DM385, mode0 does not exist, still we keep it to allow
@@ -183,693 +345,1325 @@
 	 */
 	_TI814X_MUXENTRY(MCASP2_AXR0, 0,
 			"mcasp2_axr0", "mmc0_dat6", NULL, "sc0_clk", NULL,
-			"uart5_rxd_mux3", NULL, "gpio0_12_mux1"),
+			"uart5_rxd_mux3", NULL, "gpio0_12_mux1", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(MCASP2_AXR0, 0,
+			"mcasp2_axr0_ti811x", NULL, NULL, NULL, "eQEP0B_in",
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP2_AXR1, 0,
 			"mcasp2_axr1", "mmc0_dat7", NULL, "sc0_vccen", NULL,
-			"uart5_txd_mux3", NULL, "gpio0_13_mux1"),
+			"uart5_txd_mux3", NULL, "gpio0_13_mux1", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(MCASP2_AXR1, 0,
+			"mcasp2_axr1_ti811x", NULL, NULL, NULL, "eQEP0_index",
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 
 	/* Following group is removed for DM385 */
 	_TI814X_MUXENTRY(MCASP2_AXR2, 0,
 			"mcasp2_axr2", "mcasp1_axr6", NULL, "sc0_vppen", NULL,
-			NULL, "timer2_mux0", "gpio0_14_mux1"),
+			NULL, "timer2_mux0", "gpio0_14_mux1", NULL, NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(MCASP2_AXR2, 0,
+			"mcasp2_axr2_ti811x", NULL, "pr1_mii_mr0_clk_mux0",
+			NULL, "eQEP0_strobe", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP2_AXR3, 0,
 			"mcasp2_axr3", "mcasp1_axr7", NULL, "tso0_pacerr", NULL,
-			NULL, "timer3_mux0", "gpio0_15_mux1"),
+			NULL, "timer3_mux0", "gpio0_15_mux1", NULL, NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(MCASP2_AXR3, 0,
+			"mcasp2_axr3_ti811x", NULL, "pr1_mii0_rxdv_mux0", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP3_CLKX, 0,
-			"mcasp3_aclkx", NULL, NULL, "tsi0_dclk",
-			NULL, NULL, NULL, "gpio0_16_mux1"),
+			"mcasp3_aclkx", NULL, NULL, "tsi0_dclk", NULL, NULL,
+			NULL, "gpio0_16_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP3_CLKX, 0,
+			"mcasp3_aclkx_ti811x", NULL, NULL, NULL,
+			"pr1_pru0_pru_r31_20", "pr1_pru0_pru_r30_20", NULL,
+			NULL, NULL, NULL, NULL,	NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP3_FSX, 0,
+			"mcasp3_fsx", NULL, NULL, "tsi0_bytstrt", NULL, NULL,
+			NULL, "gpio0_17_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP3_FSX, 0,
-			"mcasp3_fsx", NULL, NULL, "tsi0_bytstrt",
-			NULL, NULL, NULL, "gpio0_17_mux1"),
+			"mcasp3_fsx_ti811x", NULL, NULL, NULL,
+			"pr1_pru0_pru_r31_19", "pr1_pru0_pru_r30_19", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP3_AXR0, 0,
+			"mcasp3_axr0", NULL, NULL, "tsi0_data",	NULL, NULL,
+			"timer4_mux0", "gpio0_18_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP3_AXR0, 0,
-			"mcasp3_axr0", NULL, NULL, "tsi0_data",
-			NULL, NULL, "timer4_mux0", "gpio0_18_mux1"),
+			"mcasp3_axr0_ti811x", NULL, NULL, NULL,
+			"pr1_pru0_pru_r31_18", "pr1_pru0_pru_r30_18", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP3_AXR1, 0,
-			"mcasp3_axr1", NULL, NULL, "tsi0_pacval",
-			NULL, NULL, "timer5_mux0", "gpio0_19_mux1"),
+			"mcasp3_axr1", NULL, NULL, "tsi0_pacval", NULL, NULL,
+			"timer5_mux0", "gpio0_19_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP3_AXR1, 0,
+			"mcasp3_axr1_ti811x", NULL, NULL, NULL,
+			"pr1_pru0_pru_r31_17", "pr1_pru0_pru_r30_17", NULL,
+			NULL, NULL, NULL, NULL,	NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP3_AXR2, 0,
 			"mcasp3_axr2", "mcasp1_axr_8_mux1", NULL, "tsi0_pacerr",
-			NULL, NULL, NULL, "gpio0_20_mux1"),
+			NULL, NULL, NULL, "gpio0_20_mux1", NULL, NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(MCASP3_AXR2, 0,
+			"mcasp3_axr2_ti811x", NULL, "pr1_mii0_rxd3_mux0", NULL,
+			"eQEP2_index_mux2", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP3_AXR3, 0,
 			"mcasp3_axr3", "mcasp1_axr_9_mux1", NULL, "tsi2_pacerr",
-			NULL, NULL, NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP3_AXR3, 0,
+			"mcasp3_axr3_ti811x", NULL, "pr1_mii0_rxd2_mux0", NULL,
+			"eQEP2_strobe_mux0", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP4_CLKX, 0,
-			"mcasp4_aclkx", NULL, NULL, "tsi2_dclk",
-			NULL, NULL, NULL, "gpio0_21_mux1"),
+			"mcasp4_aclkx", NULL, NULL, "tsi2_dclk", NULL, NULL,
+			NULL, "gpio0_21_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP4_CLKX, 0,
+			"mcasp4_aclkx_ti811x", NULL, NULL, NULL,
+			"pr1_pru0_pru_r31_14", "pr1_pru0_pru_r30_14", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP4_FSX, 0,
+			"mcasp4_fsx", NULL, NULL, "tsi2_bytstrt", NULL, NULL,
+			NULL, "gpio0_22_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP4_FSX, 0,
-			"mcasp4_fsx", NULL, NULL, "tsi2_bytstrt",
-			NULL, NULL, NULL, "gpio0_22_mux1"),
+			"mcasp4_fsx_ti811x", "pr1_mii0_rxd1_mux0", NULL, NULL,
+			"pr1_pru0_pru_r31_15", "pr1_pru0_pru_r30_15", NULL,
+			NULL, NULL, NULL, NULL,	NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(MCASP4_AXR0, 0,
+			"mcasp4_axr0", NULL, NULL, "tsi2_data", NULL, NULL,
+			NULL, "gpio0_23_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP4_AXR0, 0,
-			"mcasp4_axr0", NULL, NULL, "tsi2_data",
-			NULL, NULL, NULL, "gpio0_23_mux1"),
+			"mcasp4_axr0_ti811x", "pr1_mii0_rxd0_mux0", NULL, NULL,
+			"pr1_pru0_pru_r31_13", "pr1_pru0_pru_r30_13", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP4_AXR1, 0,
-			"mcasp4_axr1", NULL, NULL, "tsi2_pacval",
-			NULL, NULL, "timer6_mux0", "gpio0_24_mux1"),
+			"mcasp4_axr1", NULL, NULL, "tsi2_pacval", NULL, NULL,
+			"timer6_mux0", "gpio0_24_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP4_AXR1, 0,
+			"mcasp4_axr1_ti811x", "pr1_mii0_crs_mux0", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP5_CLKX, 0,
-			"mcasp5_aclkx", NULL, NULL, "tso0_dclk",
-			NULL, NULL, NULL, "gpio0_25_mux1"),
+			"mcasp5_aclkx", NULL, NULL, "tso0_dclk", NULL, NULL,
+			NULL, "gpio0_25_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP5_FSX, 0,
-			"mcasp5_fsx", NULL, NULL, "tso0_bytstrt",
-			NULL, NULL, NULL, "gpio0_26_mux1"),
+			"mcasp5_fsx", NULL, NULL, "tso0_bytstrt", NULL, NULL,
+			NULL, "gpio0_26_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(MCASP5_AXR0, 0,
+			"mcasp5_axr0", "mcasp4_axr2", NULL, "tso0_data", NULL,
+			NULL, NULL, "gpio0_27_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MCASP5_AXR0, 0,
-			"mcasp5_axr0", "mcasp4_axr2", NULL, "tso0_data",
-			NULL, NULL, NULL, "gpio0_27_mux1"),
+			"mcasp5_axr0_ti811x", NULL, NULL, NULL,	NULL,
+			"pr1_ecap0_ecap_capin_apwm_o_mux0", NULL, NULL,	NULL,
+			NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MCASP5_AXR1, 0,
 			"mcasp5_axr1", "mcasp4_axr3", NULL, "tso0_pacval",
-			NULL, NULL, "timer7_mux0", "gpio0_28_mux1"),
+			NULL, NULL, "timer7_mux0", "gpio0_28_mux1", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(MCASP5_AXR1, 0,
+			"mcasp5_axr1_ti811x", NULL, NULL, NULL,	NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),/*for TI811X only */
 	_TI814X_MUXENTRY(MLB_SIG, 0,
-			"mlb_sig", NULL, NULL, "uart2_rxd_mux1",
-			NULL, NULL, NULL, "gpio0_29"),
+			"mlb_sig", NULL, NULL, "uart2_rxd_mux1", NULL, NULL,
+			NULL, "gpio0_29", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLB_DAT, 0,
-			"mlb_dat", NULL, NULL, "tclkin",
-			NULL, NULL, NULL, "gpio0_30"),
+			"mlb_dat", NULL, NULL, "tclkin", NULL, NULL, NULL,
+			"gpio0_30", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLB_CLK, 0,
-			"mlb_clk", NULL, NULL, "uart2_txd_mux1",
-			NULL, NULL, NULL, "gpio0_31"),
+			"mlb_clk", NULL, NULL, "uart2_txd_mux1", NULL, NULL,
+			NULL, "gpio0_31", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_SIG_P, 0,
-			"mlbp_sig_p", NULL, NULL, NULL,
-			NULL, NULL, NULL, "gpio1_07_mux1"),
+			"mlbp_sig_p", NULL, NULL, NULL,	NULL, NULL, NULL,
+			"gpio1_07_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_SIG_N, 0,
-			NULL, NULL, NULL, NULL,
-			NULL, NULL, NULL, "gpio1_08_mux1"),
+			NULL, NULL, NULL, NULL,	NULL, NULL, NULL,
+			"gpio1_08_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_DAT_P, 0,
-			"mlbp_dat_p", NULL, NULL, NULL,
-			NULL, NULL, NULL, "gpio1_09_mux1"),
+			"mlbp_dat_p", NULL, NULL, NULL,	NULL, NULL, NULL,
+			"gpio1_09_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_DAT_N, 0,
-			NULL, NULL, NULL, NULL,
-			NULL, NULL, NULL, "gpio1_10_mux1"),
+			NULL, NULL, NULL, NULL,	NULL, NULL, NULL,
+			"gpio1_10_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_CLK_P, 0,
-			"mlbp_clk_p", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"mlbp_clk_p", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MLBP_CLK_N, 0,
-			"mlbp_clk_n", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"mlbp_clk_n", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 
 	_TI814X_MUXENTRY(DCAN0_TX, 0,
 			"dcan0_tx", "uart2_txd_mux2", NULL, NULL, NULL,
-			"i2c3_sda_mux1", NULL, "gpio1_0"),
+			"i2c3_sda_mux1", NULL, "gpio1_0", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(DCAN0_RX, 0,
 			"dcan0_rx", "uart2_rxd_mux2", NULL, NULL, NULL,
-			"i2c3_scl_mux1", NULL, "gpio1_1"),
+			"i2c3_scl_mux1", NULL, "gpio1_1", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(UART0_RXD, 0,
-			"uart0_rxd", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"uart0_rxd", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(UART0_TXD, 0,
-			"uart0_txd", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"uart0_txd", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 
 	/* uart3/uart4_xxx not there for DM385 */
 	_TI814X_MUXENTRY(UART0_CTSN, 0,
 			"uart0_ctsn", "uart4_rxd_mux3", NULL, "dcan1_tx",
-			"spi1_cs3", NULL, "mmc0_sdcd", NULL),
+			"spi1_cs3", NULL, "mmc0_sdcd", NULL, NULL, NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(UART0_CTSN, 0,
+			"uart0_ctsn_ti811x", NULL, NULL, NULL,
+			"spi1_cs3", NULL, NULL, "gpio4_16", NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(UART0_RTSN, 0,
 			"uart0_rtsn", "uart4_txd_mux3", NULL, "dcan1_rx",
-			"spi1_cs2", NULL, "mmc2_sdcd", NULL),	/* non DM385 */
+			"spi1_cs2", NULL, "mmc2_sdcd", NULL, NULL, NULL, NULL,
+			NULL),	/* non DM385 */
 	_TI814X_MUXENTRY(UART0_RTSN, 0,
-			"uart0_rtsn", "sata_act1_led_mux", NULL, "dcan1_rx",
-			"spi1_cs2", NULL, "mmc2_sdcd", NULL),	/* DM385 only */
+			"uart0_rtsn_ti813x", "sata_act1_led_mux", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* DM385 only */
+	_TI814X_MUXENTRY(UART0_RTSN, 0,
+			"uart0_rtsn_ti811x", NULL, NULL, NULL,
+			NULL, NULL, NULL, "gpio4_17", NULL, NULL, NULL,
+			NULL),/* for TI811X only */
+
+	/* "mmc1_pow_mux0" on TI811X is "mmc1_pow" below */
 	_TI814X_MUXENTRY(UART0_DCDN, 0,
 			"uart0_dcdn", "uart3_rxd_mux0", NULL, NULL, "spi0_cs3",
-			"i2c2_scl_mux0", "mmc1_pow", "gpio1_2"),
+			"i2c2_scl_mux0", "mmc1_pow", "gpio1_2", NULL, NULL,
+			NULL, NULL),
+
+	/* "mmc1_sdwp_mux0" on TI811X is "mmc1_sdwp" below */
 	_TI814X_MUXENTRY(UART0_DSRN, 0,
 			"uart0_dsrn", "uart3_txd_mux0", NULL, NULL, "spi0_cs2",
-			"i2c2_sda_mux0", "mmc1_sdwp", "gpio1_3"),
+			"i2c2_sda_mux0", "mmc1_sdwp", "gpio1_3", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(UART0_DTRN, 0,
 			"uart0_dtrn", "uart3_ctsn_mux0", "uart1_txd_mux0", NULL,
-			NULL, NULL, NULL, "gpio1_4"),
+			NULL, NULL, NULL, "gpio1_4", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(UART0_DTRN, 0,
+			"uart0_dtrn_ti811x", NULL, NULL, "pr1_pru1_pru_r30_14",
+			"pr1_pru1_pru_r31_14", "eCAP2_in_PWM2_out_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(UART0_RIN, 0,
 			"uart0_rin", "uart3_rtsn_mux0", "uart1_rxd_mux0", NULL,
-			NULL, NULL, NULL, "gpio1_5"),
+			NULL, NULL, NULL, "gpio1_5", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(UART0_RIN, 0,
+			"uart0_rin_ti811x", NULL, NULL, "pr1_pru1_pru_r30_15",
+			"pr1_pru1_pru_r31_15", "eCAP1_in_PWM1_out_mux0", NULL,
+			NULL, NULL, NULL, NULL, NULL),/* for TI811X only */
 
 	_TI814X_MUXENTRY(I2C1_SCL, 0,
 			"i2c1_scl", "hdmi_ddc_scl_mux0", NULL, NULL, NULL, NULL,
-			NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(I2C1_SDA, 0,
 			"i2c1_sda", "hdmi_ddc_sda_mux0", NULL, NULL, NULL, NULL,
-			NULL, NULL),
+			NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(SPI0_CS1, 0,
 			"spi0_cs1", "mmc1_sdcd", "sata_act0_led", NULL, NULL,
-			"xdma_evt_1_mux1", "timer4_mux1", "gpio1_6"),
+			"xdma_evt_1_mux1", "timer4_mux1", "gpio1_6", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(SPI0_CS1, 0,
+			"spi0_cs1_ti811x", "mmc1_sdcd_mux0", NULL,
+			"ehrpwm0A_mux1", "pr1_ecap0_ecap_capin_apwm_o_mux1",
+			NULL, NULL, NULL, "eCAP0_in_PWM0_out", NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(SPI0_CS0, 0,
-			"spi0_cs0", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"spi0_cs0", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(SPI0_CS0, 0,
+			"spi0_cs0_ti811x", NULL, NULL, NULL, NULL, NULL, NULL,
+			"gpio4_18", NULL, NULL, NULL, NULL),/*for TI811X only */
+	_TI814X_MUXENTRY(SPI0_SCLK, 0,
+			"spi0_sclk", NULL, NULL, NULL, NULL, NULL, "`",
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(SPI0_SCLK, 0,
-			"spi0_sclk", NULL, NULL, NULL, NULL, NULL, "`", NULL),
+			"spi0_sclk_ti811x", NULL, NULL,
+			"ehrpwm0_tripzone_input_mux1", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),/* for TI811X only */
+	_TI814X_MUXENTRY(SPI0_D1, 0,
+			"spi0_d1", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(SPI0_D1, 0,
-			"spi0_d1", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"spi0_d1_ti811x", NULL, "ehrpwm0_synci_mux1",
+			"ehrpwm0_synco_mux1", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(SPI0_D0, 0,
-			"spi0_d0", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"spi0_d0", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(SPI0_D0, 0,
+			"spi0_d0_ti811x", NULL, NULL, "ehrpwm0B_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(SPI1_CS0, 0,
 			"spi1_cs0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_16_mux1"),
+			"gpio1_16_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(SPI1_SCLK, 0,
 			"spi1_sclk", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_17_mux1"),
+			"gpio1_17_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(SPI1_D1, 0,
 			"spi1_d1", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_18_mux1"),
+			"gpio1_18_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(SPI1_D1, 0,
+			"spi1_d1_ti811x", NULL, NULL, "eCAP2_in_PWM2_out_mux2",
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(SPI1_D0, 0,
 			"spi1_d0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_26_mux1"),
+			"gpio1_26_mux1", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(SPI1_D0, 0,
+			"spi1_d0_ti811x", NULL, NULL, "eCAP1_in_PWM1_out_mux1",
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(GPMC_AD00, 0,
 			"gpmc_ad0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot0"),
+			"boot0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD01, 0,
 			"gpmc_ad1", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot1"),
+			"boot1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD02, 0,
 			"gpmc_ad2", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot2"),
+			"boot2", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD03, 0,
 			"gpmc_ad3", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot3"),
+			"boot3", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD04, 0,
 			"gpmc_ad4", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot4"),
+			"boot4", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD05, 0,
 			"gpmc_ad5", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot5"),
+			"boot5", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD06, 0,
 			"gpmc_ad6", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot6"),
+			"boot6", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD07, 0,
 			"gpmc_ad7", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot7"),
+			"boot7", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD08, 0,
 			"gpmc_ad8", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot8"),
+			"boot8", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD09, 0,
 			"gpmc_ad9", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot9"),
+			"boot9", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD10, 0,
 			"gpmc_ad10", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot10"),
+			"boot10", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD11, 0,
 			"gpmc_ad11", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot11"),
+			"boot11", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD12, 0,
 			"gpmc_ad12", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot12"),
+			"boot12", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD13, 0,
 			"gpmc_ad13", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot13"),
+			"boot13", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD14, 0,
 			"gpmc_ad14", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot14"),
+			"boot14", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_AD15, 0,
 			"gpmc_ad15", NULL, NULL, NULL, NULL, NULL, NULL,
-			"boot15"),
+			"boot15", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A16, 0,
 			"gpmc_a16", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_05_mux0"),
+			"gpio2_05_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A17, 0,
 			"gpmc_a17", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_06_mux0"),
+			"gpio2_06_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A18, 0,
 			"gpmc_a18", NULL, NULL, NULL, NULL, NULL, "timer2_mux2",
-			"gpio1_13_mux0"),
+			"gpio1_13_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A19, 0,
 			"gpmc_a19", NULL, NULL, NULL, NULL, NULL, "timer3_mux2",
-			"gpio1_14_mux0"),
+			"gpio1_14_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A20, 0,
 			"gpmc_a_20_mux0", NULL, "spi2_cs1", NULL, NULL, NULL,
-			NULL, "gpio1_15_mux0"),
+			NULL, "gpio1_15_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A21, 0,
 			"gpmc_a_21_mux0", NULL, "spi2_d_0_mux0", NULL, NULL,
-			NULL, NULL, "gpio1_16_mux0"),
+			NULL, NULL, "gpio1_16_mux0", NULL, NULL, NULL, NULL),
+
+	/* following gpmc_ad0_ti811x to gpmc_ad21_ti811x are only on TI811X */
+
+	_TI814X_MUXENTRY(GPMC_AD00, 0,
+			"gpmc_ad0_ti811x", NULL, "spi2_d_1_mux3", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD01, 0,
+			"gpmc_ad1_ti811x", NULL, "spi2_d_0_mux3", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD04, 0,
+			"gpmc_ad4_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"gpio5_6", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD05, 0,
+			"gpmc_ad5_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"gpio5_7", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD06, 0,
+			"gpmc_ad6_ti811x", NULL, NULL, NULL,
+			"ehrpwm2_tripzone_input_mux2", NULL, "gpio5_8", NULL,
+			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD07, 0,
+			"gpmc_ad7_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"gpio5_9", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD08, 0,
+			"gpmc_ad8_ti811x", NULL, NULL, "uart7_txd_mux2", NULL,
+			NULL, "gpio4_0", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD09, 0,
+			"gpmc_ad9_ti811x", NULL, NULL, "uart7_rxd_mux2", NULL,
+			NULL, "gpio4_1", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD10, 0,
+			"gpmc_ad10_ti811x", NULL, NULL, "uart7_rtsn_mux2", NULL,
+			NULL, "gpio4_2", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD11, 0,
+			"gpmc_ad11_ti811x", NULL, NULL, "uart7_ctsn_mux2", NULL,
+			NULL, "gpio4_3", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD12, 0,
+			"gpmc_ad12_ti811x", NULL, NULL, NULL, "ehrpwm2A_mux2",
+			NULL, "gpio4_4", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD13, 0,
+			"gpmc_ad13_ti811x", NULL, NULL, NULL, "ehrpwm2B_mux2",
+			NULL, "gpio4_5", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD14, 0,
+			"gpmc_ad14_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"gpio4_6", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_AD15, 0,
+			"gpmc_ad15_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"gpio4_7", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A16, 0,
+			"gpmc_a16_ti811x", NULL, NULL, "i2c2_scl_mux4", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A17, 0,
+			"gpmc_a17_ti811x", NULL, NULL, "i2c2_sda_mux4", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A18, 0,
+			"gpmc_a18_ti811x", NULL, NULL, "i2c3_scl_mux4", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A19, 0,
+			"gpmc_a19_ti811x", NULL, NULL, "i2c3_sda_mux4", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A20, 0,
+			"gpmc_a_20_mux0_ti811x", "gpmc_a_26_invert", NULL, NULL,
+			NULL, NULL, "gpio4_8", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_A21, 0,
+			"gpmc_a_21_mux0_ti811x", "gpmc_a_27_invert", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+
 	_TI814X_MUXENTRY(GPMC_A22, 0,
 			"gpmc_a_22_mux0", NULL, "spi2_d_1_mux0", NULL,
-			"hdmi_cec_mux0", NULL, "timer4_mux2", "gpio1_17_mux0"),
+			"hdmi_cec_mux0", NULL, "timer4_mux2", "gpio1_17_mux0",
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_A23, 0,
 			"gpmc_a_23_mux0", NULL, "spi2_sclk_mux0", NULL,
-			"hdmi_hpd_mux0", NULL, "timer5_mux2", "gpio1_18_mux0"),
+			"hdmi_hpd_mux0", NULL, "timer5_mux2", "gpio1_18_mux0",
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_DAT7, 0,
 			"mmc2_dat7", "gpmc_a_24_mux0", "gpmc_a_20_mux1", NULL,
-			NULL, "uart2_rxd_mux3", NULL, "gpio1_19"),
+			NULL, "uart2_rxd_mux3", NULL, "gpio1_19", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(MMC2_DAT7, 0,
+			"mmc2_dat7_ti811x", NULL, NULL, NULL, "vin1_hsync1",
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MMC2_DAT6, 0,
 			"mmc2_dat6", "gpmc_a_25_mux0", "gpmc_a_21_mux1", NULL,
-			NULL, "uart2_txd_mux3", NULL, "gpio1_20"),
+			NULL, "uart2_txd_mux3", NULL, "gpio1_20", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(MMC2_DAT6, 0,
+			"mmc2_dat6_ti811x", NULL, NULL, NULL, "vin1_vsync1",
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(MMC2_DAT5, 0,
 			"mmc2_dat5", "gpmc_a_26_mux0", "gpmc_a_22_mux1", NULL,
-			NULL, NULL, "timer6_mux2", "gpio1_21"),
+			NULL, NULL, "timer6_mux2", "gpio1_21", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(MMC2_DAT4, 0,
 			"mmc2_dat4", "gpmc_a_27_mux0", "gpmc_a_23_mux1",
 			"gpmc_cs7", NULL, "xdma_evt_0_mux1", "timer7_mux2",
-			"gpio1_22"),
+			"gpio1_22", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_DAT3, 0,
 			"mmc2_dat3", "gpmc_a_1_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio2_05_mux1"),
+			NULL, "gpio2_05_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_DAT2, 0,
 			"mmc2_dat2", "gpmc_a_2_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio2_06_mux1"),
+			NULL, "gpio2_06_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_DAT1, 0,
 			"mmc2_dat1", "gpmc_a_3_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio1_13_mux1"),
+			NULL, "gpio1_13_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_DAT0, 0,
 			"mmc2_dat0", "gpmc_a_4_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio1_14_mux1"),
+			NULL, "gpio1_14_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MMC2_CLK, 0,
 			"mmc2_clk", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_15_mux1"),
+			"gpio1_15_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CS0, 0,
 			"gpmc_cs0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_23"),
+			"gpio1_23", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CS1, 0,
 			"gpmc_cs1", "gpmc_a_25_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio1_24"),
+			NULL, "gpio1_24", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CS2, 0,
 			"gpmc_cs2", "gpmc_a_24_mux1", NULL, NULL, NULL, NULL,
-			NULL, "gpio1_25"),
+			NULL, "gpio1_25", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CS3, 0,
 			"gpmc_cs3", "vin1_clk1", "spi2_cs0", NULL, NULL, NULL,
-			NULL, "gpio1_26_mux0"),
+			NULL, "gpio1_26_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CS4, 0,
 			"gpmc_cs4", "mmc2_cmd", NULL, NULL, NULL, NULL, NULL,
-			"gpio1_08_mux0"),
+			"gpio1_08_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_CLK, 0,
 			"gpmc_clk", "gpmc_cs5", NULL, "gpmc_wait1", "clkout1",
-			"xdma_evt_3_mux0", "timer4_mux3", "gpio1_27"),
+			"xdma_evt_3_mux0", "timer4_mux3", "gpio1_27", NULL,
+			NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GPMC_CLK, 0,
+			"gpmc_clk_ti811x", NULL, "spi2_sclk_mux3", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(GPMC_ADVN_ALE, 0,
 			"gpmc_advn_ale", "gpmc_cs6", NULL, NULL, NULL, NULL,
-			"timer5_mux3", "gpio1_28"),
+			"timer5_mux3", "gpio1_28", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_OEN_REN, 0,
 			"gpmc_oen_ren", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_WEN, 0,
-			"gpmc_wen", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"gpmc_wen", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_BEN0, 0,
 			"gpmc_ben0", "gpmc_a_25_mux2", NULL, NULL, NULL,
-			"xdma_evt_2_mux0", "timer6_mux3", "gpio1_29"),
+			"xdma_evt_2_mux0", "timer6_mux3", "gpio1_29", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_BEN1, 0,
 			"gpmc_ben1", "gpmc_a_24_mux2", NULL, NULL, NULL,
-			"xdma_evt_1_mux0", "timer7_mux3", "gpio1_30"),
+			"xdma_evt_1_mux0", "timer7_mux3", "gpio1_30", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GPMC_WAIT0, 0,
 			"gpmc_wait0", "gpmc_a_26_mux2", NULL, NULL, NULL,
-			"xdma_evt_0_mux0", NULL, "gpio1_31"),
+			"xdma_evt_0_mux0", NULL, "gpio1_31", NULL, NULL, NULL,
+			NULL),
+	/* "clkout0_mux0" on TI811X is "cam_xclka" below */
 	_TI814X_MUXENTRY(VIN0_CLK1, 0,
 			"vin0_clk1", NULL, NULL, NULL, NULL, "cam_xclka", NULL,
-			"gpio1_09_mux0"),
+			"gpio1_09_mux0", NULL, NULL, NULL, NULL),
 
 	/* uart5 pins modes  are not for DM385 */
 	_TI814X_MUXENTRY(VIN0_DE0_MUX0, 0,
 			"vin0_de0_mux0", NULL, NULL, NULL, "vin0_hsync1",
-			"uart5_txd_mux1", "i2c2_sda_mux1", "gpio2_0"),
+			"uart5_txd_mux1", "i2c2_sda_mux1", "gpio2_0", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_FLD0_MUX0, 0,
 			"vin0_fld0_mux0", NULL, NULL, NULL, "vin0_vsync1",
-			"uart5_rxd_mux1", "i2c2_scl_mux3", "gpio2_1"),
+			"uart5_rxd_mux1", "i2c2_scl_mux3", "gpio2_1", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_CLK0, 0,
 			"vin0_clk0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_02_mux1"),
+			"gpio2_02_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_HSYNC0, 0,
 			"vin0_hsync0", NULL, NULL, NULL, NULL,
-			"uart5_rtsn_mux1", NULL, "gpio2_3"),
+			"uart5_rtsn_mux1", NULL, "gpio2_3", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VIN0_VSYNC0, 0,
 			"vin0_vsync0", NULL, NULL, NULL, NULL,
-			"uart5_ctsn_mux1", NULL, "gpio2_4"),
+			"uart5_ctsn_mux1", NULL, "gpio2_4", NULL, NULL, NULL,
+			NULL),
 
 	_TI814X_MUXENTRY(VIN0_D0, 0,
 			"vin0_d0", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_11_mux1"),
+			"gpio1_11_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D1, 0,
 			"vin0_d1", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_12_mux1"),
+			"gpio1_12_mux1", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D2, 0,
 			"vin0_d2", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_7"),
+			"gpio2_7", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D3, 0,
 			"vin0_d3", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_8"),
+			"gpio2_8", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D4, 0,
 			"vin0_d4", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_9"),
+			"gpio2_9", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D5, 0,
 			"vin0_d5", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_10"),
+			"gpio2_10", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D6, 0,
 			"vin0_d6", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_11"),
+			"gpio2_11", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D7, 0,
 			"vin0_d7", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_12"),
+			"gpio2_12", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D8, 0,
 			"vin0_d8", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_13"),
+			"gpio2_13", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D9, 0,
 			"vin0_d9", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_14"),
+			"gpio2_14", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D10, 0,
 			"vin0_d10", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_15"),
+			"gpio2_15", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D11, 0,
 			"vin0_d11", NULL, NULL, NULL, NULL, "cam_de_mux1", NULL,
-			"gpio2_16"),
+			"gpio2_16", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D12, 0,
 			"vin0_d12", NULL, NULL, NULL, NULL, "cam_xclkb", NULL,
-			"gpio2_17"),
+			"gpio2_17", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D13, 0,
 			"vin0_d13", NULL, NULL, NULL, NULL, "cam_reset", NULL,
-			"gpio2_18"),
+			"gpio2_18", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D14, 0,
 			"vin0_d14", NULL, NULL, NULL, NULL, "cam_strobe", NULL,
-			"gpio2_19"),
+			"gpio2_19", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D15, 0,
 			"vin0_d15", NULL, NULL, NULL, NULL, "cam_shutter", NULL,
-			"gpio2_20"),
+			"gpio2_20", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D16, 0,
 			"vin0_d16", "cam_d8", NULL, NULL, NULL, "i2c2_scl_mux1",
-			NULL, "gpio0_10_mux0"),
+			NULL, "gpio0_10_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D17, 0,
 			"vin0_d17", "cam_d9", NULL, "rmii1_rxer_mux1", NULL,
-			NULL, NULL, "gpio0_11_mux0"),
+			NULL, NULL, "gpio0_11_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D18, 0,
 			"vin0_d18", "cam_d10", NULL, "rmii1_rxd1_mux1", NULL,
-			"i2c3_scl_mux2", NULL, "gpio0_12_mux0"),
+			"i2c3_scl_mux2", NULL, "gpio0_12_mux0", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D19, 0,
 			"vin0_d19", "cam_d11", NULL, "rmii1_rxd0_mux1", NULL,
-			"i2c3_sda_mux2", NULL, "gpio0_13_mux0"),
+			"i2c3_sda_mux2", NULL, "gpio0_13_mux0", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D20, 0,
 			"vin0_d20", "cam_d12", NULL, "rmii1_crs_mux1", NULL,
-			"spi3_cs0", NULL, "gpio0_14_mux0"),
+			"spi3_cs0", NULL, "gpio0_14_mux0", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VIN0_D21, 0,
 			"vin0_d21", "cam_d13", NULL, "rmii1_txd0_mux1", NULL,
-			"spi3_sclk_mux0", NULL, "gpio0_15_mux0"),
+			"spi3_sclk_mux0", NULL, "gpio0_15_mux0", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D22, 0,
 			"vin0_d22", "cam_d14", NULL, "rmii1_txd1_mux1", NULL,
-			"spi3_d_1_mux0", NULL, "gpio0_16_mux0"),
+			"spi3_d_1_mux0", NULL, "gpio0_16_mux0", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_D23, 0,
 			"vin0_d23", "cam_d15", NULL, "rmii1_txen_mux1", NULL,
-			"spi3_d_0_mux0", NULL, "gpio0_17_mux0"),
+			"spi3_d_0_mux0", NULL, "gpio0_17_mux0", NULL, NULL,
+			NULL, NULL),
+
+	/* Following from VIN0_D0 to VIN0_D23 are on TI811X only */
+	_TI814X_MUXENTRY(VIN0_D0, 0,
+			"vin0_d0_ti811x", NULL, "pr1_edc_latch0_in_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D1, 0,
+			"vin0_d1_ti811x", NULL, "pr1_edc_latch1_in_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D3, 0,
+			"vin0_d3_ti811x", NULL, "pr1_edc_sync0_out_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D4, 0,
+			"vin0_d4_ti811x", NULL, "pr1_edc_sync1_out_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D5, 0,
+			"vin0_d5_ti811x", NULL, "pr1_edio_sof_mux1", NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D6, 0,
+			"vin0_d6_ti811x", NULL, "pr1_mdio_mdclk_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D7, 0,
+			"vin0_d7_ti811x", NULL, "pr1_mdio_data_mux1", NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D8, 0,
+			"vin0_d8_ti811x", NULL, "pr1_mii_mt1_clk_mux1",
+			NULL, NULL, NULL, NULL,	NULL, "vin0b_d_0_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D9, 0,
+			"vin0_d9_ti811x", NULL, "pr1_mii1_txd3_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_1_mux0", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D10, 0,
+			"vin0_d10_ti811x", NULL, "pr1_mii1_txd2_mux1", NULL,
+			NULL, NULL, NULL, "gpio2_15", "vin0b_d_2_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D11, 0,
+			"vin0_d11_ti811x", NULL, "pr1_mii1_txd1_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_3_mux0", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D12, 0,
+			"vin0_d12_ti811x", NULL, "pr1_mii1_txd0_mux1",
+			"pr1_pru1_pru_r31_16", "uart7_rtsn_mux0", NULL,
+			"pr1_pru1_pru_r30_16", NULL, "vin0b_d_4_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D13, 0,
+			"vin0_d13_ti811x", NULL, "pr1_mii1_rxd3_mux1",
+			"pr1_pru1_pru_r31_20", "uart7_ctsn_mux0", NULL,
+			"pr1_pru1_pru_r30_20", NULL, "vin0b_d_5_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D14, 0,
+			"vin0_d14_ti811x", NULL, "pr1_mii1_rxd2_mux1",
+			"pr1_pru1_pru_r31_19", "uart7_rxd_mux0", NULL,
+			"pr1_pru1_pru_r30_19", NULL, "vin0b_d_6_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D15, 0,
+			"vin0_d15_ti811x", NULL, "pr1_mii1_rxd1_mux1",
+			"pr1_pru1_pru_r31_18", "uart7_txd_mux0", NULL,
+			"pr1_pru1_pru_r30_18", NULL, "vin0b_d_7_mux0", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D16, 0,
+			"vin0_d16_ti811x", NULL, "pr1_mii1_rxd0_mux1",
+			"pr1_pru1_pru_r31_17", NULL, NULL,
+			"pr1_pru1_pru_r30_17", NULL, "vin0b_d_0_mux1", NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_D17, 0,
+			"vin0_d17_ti811x", NULL, "pr1_mii_mr1_clk_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_1_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D18, 0,
+			"vin0_d18_ti811x", NULL, "pr1_mii1_col_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_2_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D19, 0,
+			"vin0_d19_ti811x", NULL, "pr1_mii1_rxer_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_3_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D20, 0,
+			"vin0_d20_ti811x", NULL, "pr1_mii1_rxdv_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_4_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D21, 0,
+			"vin0_d21_ti811x", NULL, "pr1_mii1_txen_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_5_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D22, 0,
+			"vin0_d22_ti811x", NULL, "pr1_mii1_rxlink_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_6_mux1", NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VIN0_D23, 0,
+			"vin0_d23_ti811x", NULL, "pr1_mii1_crs_mux1", NULL,
+			NULL, NULL, NULL, NULL, "vin0b_d_7_mux1", NULL, NULL,
+			NULL),
+
 
 	/* No pata modes for DM385, rest all modes valid */
 	_TI814X_MUXENTRY(VIN0_DE0_MUX1, 0,
 			"vin0_de0_mux1", "cam_d7", NULL, "pata_diorn", NULL,
-			NULL, NULL, "gpio0_18_mux0"),
+			NULL, NULL, "gpio0_18_mux0", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_DE0_MUX1, 0,
+			"vin0_de0_mux1_ti811x", NULL, "vout0_vcom", NULL,
+			"uart6_rxd_mux1", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(VIN0_DE1, 0,
 			"vin0_de1", "cam_d6", NULL, "pata_csn1", NULL, NULL,
-			NULL, "gpio0_19_mux0"),
+			NULL, "gpio0_19_mux0", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VIN0_FLD0_MUX1, 0,
+			"vin0_fld0_mux1", NULL, "vout0_load1", NULL,
+			"uart6_txd_mux1", NULL, NULL, "gpio0_20_mux0", NULL,
+			NULL, NULL, NULL),/* for TI811X only */
+
+	/* Following VIN0_FLD0_MUX1 to VOUT0_FID, are not present on TI811X */
 	_TI814X_MUXENTRY(VIN0_FLD0_MUX1, 0,
-			"vin0_fld0_mux1", "cam_d5", NULL, "pata_csn0", NULL,
-			NULL, NULL, "gpio0_20_mux0"),
+			"vin0_fld0_mux1_ti811x", "cam_d5", NULL, "pata_csn0",
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VIN0_FLD1, 0,
 			"vin0_fld1", "cam_d4", NULL, "pata_diown", NULL, NULL,
-			NULL, "gpio0_21_mux0"),
+			NULL, "gpio0_21_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC1, 0,
 			"vout1_g_y_yc1", "cam_d3", NULL, "pata_dmackn",
 			"gpmc_a_5_mux1", "uart4_rxd_mux0", NULL,
-			"gpio0_22_mux0"),
+			"gpio0_22_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC0, 0,
 			"vout1_g_y_yc0", "cam_d2", NULL, "pata_da2",
 			"gpmc_a_6_mux1", "uart4_txd_mux0", NULL,
-			"gpio0_23_mux0"),
+			"gpio0_23_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR1, 0,
 			"vout1_r_cr1", "cam_d1", NULL, "pata_da1",
 			"gpmc_a_7_mux1", "uart4_ctsn_mux0", NULL,
-			"gpio0_24_mux0"),
+			"gpio0_24_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR0, 0,
 			"vout1_r_cr0", "cam_d0", NULL, "pata_da0",
 			"gpmc_a_8_mux1", "uart4_rtsn_mux0", NULL,
-			"gpio0_25_mux0"),
+			"gpio0_25_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C1, 0,
 			"vout1_b_cb_c1", "cam_hs", NULL, "pata_dmarq",
 			"gpmc_a_9_mux1", "uart2_rxd_mux0", NULL,
-			"gpio0_26_mux0"),
+			"gpio0_26_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C0, 0,
 			"vout1_b_cb_c0", "cam_vs", NULL, "pata_iordy",
 			"gpmc_a_10_mux1", "uart2_txd_mux0", NULL,
-			"gpio0_27_mux0"),
+			"gpio0_27_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_FID, 0,
 			"vout1_fid", "cam_fld", "cam_de_mux0", "pata_intrq",
-			"gpmc_a_11_mux1", "uart2_ctsn", NULL, "gpio0_28_mux0"),
+			"gpmc_a_11_mux1", "uart2_ctsn", NULL, "gpio0_28_mux0",
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_FID, 0,
 			"vout0_fid_mux1", "cam_pclk", NULL, "pata_resetn",
-			"gpmc_a_12_mux1", "uart2_rtsn", NULL, "gpio2_02_mux0"),
+			"gpmc_a_12_mux1", "uart2_rtsn", NULL, "gpio2_02_mux0",
+			NULL, NULL, NULL, NULL),
 
 	_TI814X_MUXENTRY(VOUT0_CLK, 0,
-			"vout0_clk", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"vout0_clk", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_HSYNC, 0,
 			"vout0_hsync", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT0_HSYNC, 0,
+			"vout0_hsync_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, "gpio4_19", NULL, NULL, NULL,
+			NULL),/* for TI811X only */
 	_TI814X_MUXENTRY(VOUT0_VSYNC, 0,
 			"vout0_vsync", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_AVID, 0,
 			"vout0_avid", "vout0_fid_mux0", NULL, NULL,
-			"spi3_sclk_mux2", NULL, "timer7_mux1", "gpio2_21"),
+			"spi3_sclk_mux2", NULL, "timer7_mux1", "gpio2_21", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C2, 0,
 			"vout0_b_cb_c2", "emu2", NULL, NULL, NULL, NULL, NULL,
-			"gpio2_22"),
+			"gpio2_22", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C3, 0,
 			"vout0_b_cb_c3", "obs_event0", NULL, NULL, NULL, NULL,
-			NULL, "gpio2_23"),
+			NULL, "gpio2_23", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C4, 0,
 			"vout0_b_cb_c4", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C5, 0,
 			"vout0_b_cb_c5", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C6, 0,
 			"vout0_b_cb_c6", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C7, 0,
 			"vout0_b_cb_c7", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C8, 0,
 			"vout0_b_cb_c8", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_B_CB_C9, 0,
 			"vout0_b_cb_c9", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC2, 0,
 			"vout0_g_y_yc2", "emu3", NULL, NULL, NULL, NULL, NULL,
-			"gpio2_24"),
+			"gpio2_24", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC3, 0,
 			"vout0_g_y_yc3", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio2_25"),
+			"gpio2_25", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC4, 0,
 			"vout0_g_y_yc4", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC5, 0,
 			"vout0_g_y_yc5", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC6, 0,
 			"vout0_g_y_yc6", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC7, 0,
 			"vout0_g_y_yc7", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC8, 0,
 			"vout0_g_y_yc8", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_G_Y_YC9, 0,
 			"vout0_g_y_yc9", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR2, 0,
 			"vout0_r_cr2", "emu4", NULL, NULL, NULL, NULL, NULL,
-			"gpio2_26"),
+			"gpio2_26", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR3, 0,
 			"vout0_r_cr3", "obs_event1", NULL, NULL, NULL, NULL,
-			NULL, "gpio2_27"),
+			NULL, "gpio2_27", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR4, 0,
 			"vout0_r_cr4", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR5, 0,
 			"vout0_r_cr5", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR6, 0,
 			"vout0_r_cr6", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR7, 0,
 			"vout0_r_cr7", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR8, 0,
 			"vout0_r_cr8", NULL, NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT0_R_CR9, 0,
 			"vout0_r_cr9", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
+
+	/* Following from VOUT0_VSYNC to VOUT0_R_CR9 are on TI811X only */
+	_TI814X_MUXENTRY(VOUT0_VSYNC, 0,
+			"vout0_vsync_ti811x", NULL, "vout0_load3", NULL, NULL,
+			NULL, NULL, "gpio4_20", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C2, 0,
+			"vout0_b_cb_c2_ti811x", NULL, NULL,
+			"pr1_pru1_pru_r30_0", "pr1_pru1_pru_r31_0",
+			"ehrpwm1A_mux2", NULL, NULL, NULL, NULL, "hw_dbg0",
+			NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C3, 0,
+			"vout0_b_cb_c3_ti811x", "clkout0_mux1", NULL,
+			"pr1_pru1_pru_r30_1", "pr1_pru1_pru_r31_1", NULL,
+			"uart6_txd_mux0", NULL, NULL, NULL, "hw_dbg1", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C4, 0,
+			"vout0_b_cb_c4_ti811x", NULL, NULL,
+			"pr1_pru1_pru_r30_6", "pr1_pru1_pru_r31_6",
+			"eQEP2_index_mux1", NULL, "gpio4_21", NULL, "obs_irq0",
+			"hw_dbg2", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C5, 0,
+			"vout0_b_cb_c5_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, "gpio4_22", NULL, "obs_dma0", "hw_dbg3", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C6, 0,
+			"vout0_b_cb_c6_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, "gpio4_23", NULL, "obs_irq1", "hw_dbg4", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C7, 0,
+			"vout0_b_cb_c7_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, "gpio4_24", NULL, "obs_dma1", "hw_dbg5", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C8, 0,
+			"vout0_b_cb_c8_ti811x", NULL, "pr1_mii_mt0_clk_mux1",
+			NULL, NULL, NULL, NULL, "gpio4_25", NULL, NULL,
+			"hw_dbg6", NULL),
+	_TI814X_MUXENTRY(VOUT0_B_CB_C9, 0,
+			"vout0_b_cb_c9_ti811x", NULL, "pr1_mii0_rxlink_mux1",
+			NULL, NULL, NULL, NULL, "gpio4_26", NULL, NULL,
+			"hw_dbg7", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC2, 0,
+			"vout0_g_y_yc2_ti811x", NULL, "pr1_mii0_col_mux1",
+			"pr1_pru1_pru_r30_2", "pr1_pru1_pru_r31_2",
+			"ehrpwm1B_mux2", NULL, NULL, NULL, NULL, "hw_dbg8",
+			NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC3, 0,
+			"vout0_g_y_yc3_ti811x", "eQEP1_strobe_mux1",
+			"pr1_mii0_rxer_mux1", "pr1_pru1_pru_r30_3",
+			"pr1_pru1_pru_r31_3", "ehrpwm1_tripzone_input_mux2",
+			"uart6_rxd_mux0", NULL, NULL, NULL, "hw_dbg9", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC4, 0,
+			"vout0_g_y_yc4_ti811x", NULL, "pr1_mii0_txen_mux1",
+			NULL, NULL, NULL, NULL,	"gpio5_10", NULL, NULL,
+			"hw_dbg10", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC5, 0,
+			"vout0_g_y_yc5_ti811x", NULL, "pr1_mii0_txd3_mux1",
+			NULL, NULL, NULL, NULL,
+			"gpio5_11", NULL, NULL, "hw_dbg11", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC6, 0,
+			"vout0_g_y_yc6_ti811x", NULL, "pr1_mii0_txd2_mux1",
+			NULL, NULL, NULL, NULL,	"gpio5_12", NULL, NULL,
+			"hw_dbg12", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC7, 0,
+			"vout0_g_y_yc7_ti811x", NULL, "pr1_mii0_txd1_mux1",
+			NULL, NULL, NULL, NULL,	"gpio5_13", NULL, NULL,
+			"hw_dbg13", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC8, 0,
+			"vout0_g_y_yc8_ti811x", NULL, "pr1_mii0_txd0_mux1",
+			NULL, NULL, NULL, NULL,	"gpio5_14", NULL, NULL,
+			"hw_dbg14", NULL),
+	_TI814X_MUXENTRY(VOUT0_G_Y_YC9, 0,
+			"vout0_g_y_yc9_ti811x", NULL, "pr1_mii_mr0_clk_mux1",
+			NULL, NULL, NULL, NULL,	"gpio5_15", NULL, NULL,
+			"hw_dbg15", NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR2, 0,
+			"vout0_r_cr2_ti811x", NULL, "pr1_mii0_rxdv_mux1",
+			"pr1_pru1_pru_r30_4", "pr1_pru1_pru_r31_4",
+			"eQEP2A_in_mux1", "uart6_cts", NULL, NULL, NULL, NULL,
+			NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR3, 0,
+			"vout0_r_cr3_ti811x", "clkout1_mux2",
+			"pr1_mii0_rxd3_mux1", "pr1_pru1_pru_r30_5",
+			"pr1_pru1_pru_r31_5", "eQEP2B_in_mux1", "uart6_rtsn",
+			NULL, NULL, NULL, "hw_dbg17", NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR4, 0,
+			"vout0_r_cr4_ti811x", NULL, "pr1_mii0_rxd2_mux1",
+			"pr1_pru1_pru_r30_7", "pr1_pru1_pru_r31_7",
+			"eQEP2_strobe_mux1", NULL, "gpio4_27", NULL, NULL,
+			"hw_dbg18", NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR5, 0,
+			"vout0_r_cr5_ti811x", NULL, "pr1_mii0_rxd1_mux1", NULL,
+			NULL, NULL, NULL, "gpio4_28", NULL, NULL, "hw_dbg19",
+			NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR6, 0,
+			"vout0_r_cr6_ti811x", NULL, "pr1_mii0_rxd0_mux1", NULL,
+			NULL, NULL, NULL, "gpio4_29", NULL, NULL, "hw_dbg20",
+			NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR7, 0,
+			"vout0_r_cr7_ti811x", NULL, "pr1_mii0_crs_mux1", NULL,
+			NULL, NULL, "pr1_mdio_mdclk_mux0", "gpio4_31", NULL,
+			NULL, "hw_dbg22", NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR8, 0,
+			"vout0_r_cr8_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"pr1_mdio_mdclk_mux0", "gpio4_31", NULL, NULL,
+			"hw_dbg22", NULL),
+	_TI814X_MUXENTRY(VOUT0_R_CR9, 0,
+			"vout0_r_cr9_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"pr1_mdio_data_mux0", "gpio5_5", NULL, NULL, "hw_dbg23",
 			NULL),
 
+
 	/* pata and uart4/5 modes are not present on DM385, rest available */
 	_TI814X_MUXENTRY(VOUT1_CLK, 0,
 			"vout1_clk", "gmii1_txclk", "vin1_hsync0",
-			"pata_hddir_mux0", NULL, NULL, NULL, "gpio2_28"),
+			"pata_hddir_mux0", NULL, NULL, NULL, "gpio2_28", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_HSYNC, 0,
 			"vout1_hsync", "gmii1_col", "vin1_vsync0",
 			"pata_hddir_mux1", "spi3_d_1_mux2", "uart3_rtsn_mux1",
-			NULL, "gpio2_29"),
+			NULL, "gpio2_29", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_VSYNC, 0,
 			"vout1_vsync", "gmii1_crs", "vin1_fid0", "vin1_de0",
-			"spi3_d_0_mux2", "uart3_ctsn_mux1", NULL, "gpio2_30"),
+			"spi3_d_0_mux2", "uart3_ctsn_mux1", NULL, "gpio2_30",
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_AVID, 0,
 			"vout1_avid", "gmii1_rxer", "vin1_clk0", NULL, NULL,
-			"uart4_rtsn_mux2", "timer6_mux1", "gpio2_31"),
+			"uart4_rtsn_mux2", "timer6_mux1", "gpio2_31", NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C3, 0,
 			"vout1_b_cb_c3", "gmii1_rxclk", "vin1a_d0", NULL, NULL,
-			"uart4_ctsn_mux2", NULL, "gpio3_0"),
+			"uart4_ctsn_mux2", NULL, "gpio3_0", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C4, 0,
 			"vout1_b_cb_c4", "gmii1_rxd0", "vin1a_d1", NULL, NULL,
-			"uart4_rxd_mux2", NULL, "gpio3_1"),
+			"uart4_rxd_mux2", NULL, "gpio3_1", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C5, 0,
 			"vout1_b_cb_c5", "gmii1_rxd1", "vin1a_d2", NULL, NULL,
-			"uart4_txd_mux2", NULL, "gpio3_2"),
+			"uart4_txd_mux2", NULL, "gpio3_2", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C6, 0,
 			"vout1_b_cb_c6", "gmii1_rxd2", "vin1a_d3", NULL, NULL,
-			"uart3_rxd_mux1", NULL, "gpio3_3"),
+			"uart3_rxd_mux1", NULL, "gpio3_3", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C7, 0,
 			"vout1_b_cb_c7", "gmii1_rxd3", "vin1a_d4", NULL, NULL,
-			"uart3_txd_mux1", NULL, "gpio3_4"),
+			"uart3_txd_mux1", NULL, "gpio3_4", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C8, 0,
 			"vout1_b_cb_c8", "gmii1_rxd4", "vin1a_d5", NULL, NULL,
-			"i2c3_scl_mux3", NULL, "gpio3_5"),
+			"i2c3_scl_mux3", NULL, "gpio3_5", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C9, 0,
 			"vout1_b_cb_c9", "gmii1_rxd5", "vin1a_d6", NULL, NULL,
-			"i2c3_sda_mux3", NULL, "gpio3_6"),
+			"i2c3_sda_mux3", NULL, "gpio3_6", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC3, 0,
 			"vout1_g_y_yc3", "gmii1_rxd6", "vin1a_d8", "pata_d0",
-			NULL, NULL, NULL, "gpio3_7"),
+			NULL, NULL, NULL, "gpio3_7", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC4, 0,
 			"vout1_g_y_yc4", "gmii1_rxd7", "vin1a_d9", "pata_d1",
-			NULL, NULL, NULL, "gpio3_8"),
+			NULL, NULL, NULL, "gpio3_8", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC5, 0,
 			"vout1_g_y_yc5", "gmii1_rxdv", "vin1a_d10", "pata_d2",
-			NULL, NULL, NULL, "gpio3_9"),
+			NULL, NULL, NULL, "gpio3_9", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC6, 0,
 			"vout1_g_y_yc6", "gmii1_gtxclk", "vin1a_d11", "pata_d3",
-			NULL, NULL, NULL, "gpio3_10"),
+			NULL, NULL, NULL, "gpio3_10", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC7, 0,
 			"vout1_g_y_yc7", "gmii1_txd0", "vin1a_d12", "pata_d4",
-			NULL, NULL, NULL, "gpio3_11"),
+			NULL, NULL, NULL, "gpio3_11", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC8, 0,
 			"vout1_g_y_yc8", "gmii1_txd1", "vin1a_d13", "pata_d5",
-			NULL, NULL, NULL, "gpio3_12"),
+			NULL, NULL, NULL, "gpio3_12", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC9, 0,
 			"vout1_g_y_yc9", "gmii1_txd2", "vin1a_d14", "pata_d6",
-			NULL, NULL, NULL, "gpio3_13"),
+			NULL, NULL, NULL, "gpio3_13", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR4, 0,
 			"vout1_r_cr4", "gmii1_txd3", "vin1a_d15", "pata_d7",
-			NULL, "spi3_cs1", NULL, "gpio3_14"),
+			NULL, "spi3_cs1", NULL, "gpio3_14", NULL, NULL, NULL,
+			NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR5, 0,
 			"vout1_r_cr5", "gmii1_txd4", "vin1a_d16", "pata_d8",
-			NULL, "spi3_sclk_mux1", NULL, "gpio3_15"),
+			NULL, "spi3_sclk_mux1", NULL, "gpio3_15", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR6, 0,
 			"vout1_r_cr6", "gmii1_txd5", "vin1a_d17", "pata_d9",
-			NULL, "spi3_d_1_mux1", NULL, "gpio3_16"),
+			NULL, "spi3_d_1_mux1", NULL, "gpio3_16", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR7, 0,
 			"vout1_r_cr7", "gmii1_txd6", "vin1a_d18", "pata_d10",
-			NULL, "spi3_d_0_mux1", NULL, "gpio3_17"),
+			NULL, "spi3_d_0_mux1", NULL, "gpio3_17", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR8, 0,
 			"vout1_r_cr8", "gmii1_txd7", "vin1a_d19", "pata_d11",
-			NULL, "uart5_rxd_mux2", NULL, "gpio3_18"),
+			NULL, "uart5_rxd_mux2", NULL, "gpio3_18", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR9, 0,
 			"vout1_r_cr9", "gmii1_txen", "vin1a_d20", "pata_d12",
-			NULL, "uart5_txd_mux2", NULL, "gpio3_19"),
+			NULL, "uart5_txd_mux2", NULL, "gpio3_19", NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_G_Y_YC2, 0,
 			"vout1_g_y_yc2", "gpmc_a_13_mux1", "vin1a_d21",
 			"pata_d13", "hdmi_ddc_scl_mux1", "spi2_cs2",
-			"i2c2_scl_mux2", "gpio3_20"),
+			"i2c2_scl_mux2", "gpio3_20", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR3, 0,
 			"vout1_r_cr3", "gpmc_a_14_mux1", "vin1a_d22",
 			"pata_d14", "hdmi_ddc_sda_mux1", "spi2_sclk_mux1",
-			"i2c2_sda_mux2", "gpio3_21"),
+			"i2c2_sda_mux2", "gpio3_21", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_R_CR2, 0,
 			"vout1_r_cr2", "gpmc_a_15_mux1", "vin1a_d23",
 			"pata_d15", "hdmi_hpd_mux1", "spi2_d_1_mux1", NULL,
-			"gpio3_22"),
+			"gpio3_22", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(VOUT1_B_CB_C2, 0,
 			"vout1_b_cb_c2", "gpmc_a_0_mux1", "vin1a_d7", NULL,
 			"hdmi_cec_mux1", "spi2_d_0_mux1", NULL,
-			"gpio3_30_mux1"),
+			"gpio3_30_mux1", NULL, NULL, NULL, NULL),
+
+	/* Following entries , from VOUT1_HSYNC to VOUT1_B_CB_C2,
+	 * are for TI811X only
+	 */
+	_TI814X_MUXENTRY(VOUT1_HSYNC, 0,
+			"vout1_hsync_ti811x", NULL, NULL,
+			NULL, NULL, NULL,
+			"vout1_load0", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_VSYNC, 0,
+			"vout1_vsync_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "vout1_load3", NULL, NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_AVID, 0,
+			"vout1_avid_ti811x", NULL, NULL, NULL, "vout1_vcom",
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_B_CB_C3, 0,
+			"vout1_b_cb_c3_ti811x", NULL, NULL,
+			"pr1_uart0_cts_n_mux1", NULL, NULL, "vout1_load1",
+			"gpio3_0", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_B_CB_C8, 0,
+			"vout1_b_cb_c8_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out0", NULL, NULL, NULL, NULL,
+			"pr1_edio_data_in0", NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_B_CB_C9, 0,
+			"vout1_b_cb_c9_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out1", NULL, NULL, NULL, NULL,
+			"pr1_edio_data_in1", NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC3, 0,
+			"vout1_g_y_yc3_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out2", "pr1_pru1_pru_r30_8",
+			"pr1_pru1_pru_r31_8", NULL, NULL, "pr1_edio_data_in2",
+			NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC4, 0,
+			"vout1_g_y_yc4_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out3", "pr1_pru1_pru_r30_9",
+			"pr1_pru1_pru_r31_9", NULL, NULL, "pr1_edio_data_in3",
+			"uart2_rxd_mux4", NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC5, 0,
+			"vout1_g_y_yc5_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out4", "pr1_pru1_pru_r30_10",
+			"pr1_pru1_pru_r31_10", NULL, NULL, "pr1_edio_data_in4",
+			"uart2_txd_mux4", NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC6, 0,
+			"vout1_g_y_yc6_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out5", "pr1_pru1_pru_r30_11",
+			"pr1_pru1_pru_r31_11", NULL, NULL, "pr1_edio_data_in5",
+			"uart7_rtsn_mux1", NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC7, 0,
+			"vout1_g_y_yc7_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out6", "pr1_pru1_pru_r30_12",
+			"pr1_pru1_pru_r31_12", NULL, NULL, "pr1_edio_data_in6",
+			"uart7_ctsn_mux1", NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC8, 0,
+			"vout1_g_y_yc8_ti811x", NULL, NULL, NULL,
+			"pr1_edio_data_out7", "pr1_pru1_pru_r30_13",
+			"pr1_pru1_pru_r31_13", NULL, NULL, "pr1_edio_data_in7",
+			"uart7_rxd_mux1", NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC9, 0,
+			"vout1_g_y_yc9_ti811x", NULL, NULL, NULL,
+			"pr1_edio_sof_mux0", NULL, NULL, NULL, NULL,
+			"pr1_uart0_cts_n_mux0",	"uart7_txd_mux1", NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR4, 0,
+			"vout1_r_cr4_ti811x", NULL, NULL, NULL,
+			"pr1_edio_latch_in", NULL, NULL, NULL, NULL,
+			"pr1_uart0_rts_n_mux0", NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR5, 0,
+			"vout1_r_cr5_ti811x", NULL, NULL, NULL,	NULL, NULL,
+			NULL, NULL, NULL, "pr1_uart0_rxd_mux0",	NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR6, 0,
+			"vout1_r_cr6_ti811x", NULL, NULL, NULL,	NULL, NULL,
+			NULL, NULL, NULL, "pr1_uart0_txd_mux0",	NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR7, 0,
+			"vout1_r_cr7_ti811x", NULL, NULL, NULL,	NULL, NULL,
+			NULL, NULL, "pr1_edc_latch0_in_mux0", NULL,
+			"timer4_mux4", NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR8, 0,
+			"vout1_r_cr8_ti811x", NULL, NULL, NULL,	NULL, NULL,
+			NULL, NULL, "pr1_edc_latch1_in_mux0",
+			"pr1_uart0_rts_n_mux1", "timer5_mux4", NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR9, 0,
+			"vout1_r_cr9_ti811x", NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_G_Y_YC2, 0,
+			"vout1_g_y_yc2_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, "pr1_edc_sync0_out_mux0",
+			"pr1_uart0_rxd_mux1", NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR3, 0,
+			"vout1_r_cr3_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL,	"pr1_edc_sync1_out_mux0",
+			"pr1_uart0_txd_mux1", NULL),
+	_TI814X_MUXENTRY(VOUT1_R_CR2, 0,
+			"vout1_r_cr2_ti811x", NULL, NULL, NULL, NULL, NULL,
+			"vout1_load2", NULL, NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(VOUT1_B_CB_C2, 0,
+			"vout1_b_cb_c2_ti811x", NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL, NULL),
+
+
 	_TI814X_MUXENTRY(RMII_REFCLK, 0,
 			"rmii_refclk", NULL, NULL, NULL, NULL, NULL,
-			"timer2_mux3", "gpio1_10_mux0"),
+			"timer2_mux3", "gpio1_10_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MDIO_MCLK, 0,
 			"mdio_mclk", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_11_mux0"),
+			"gpio1_11_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(MDIO_D, 0,
 			"mdio_d", NULL, NULL, NULL, NULL, NULL, NULL,
-			"gpio1_12_mux0"),
+			"gpio1_12_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXCLK, 0,
 			"gmii0_txclk", "vin1b_d0", NULL, NULL, NULL, "spi3_cs3",
-			"i2c2_sda_mux3", "gpio3_23"),
+			"i2c2_sda_mux3", "gpio3_23", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_COL, 0,
 			"gmii0_col", "vin1b_d1", "rmii0_rxd0", NULL, NULL, NULL,
-			NULL, "gpio3_24"),
+			NULL, "gpio3_24", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_CRS, 0,
 			"gmii0_crs", "vin1b_d2", "rmii0_rxd1", NULL, NULL, NULL,
-			NULL, "gpio3_25"),
+			NULL, "gpio3_25", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXER, 0,
 			"gmii0_rxer", "vin1b_d3", "rmii0_rxer", NULL, NULL,
-			NULL, NULL, "gpio3_26"),
+			NULL, NULL, "gpio3_26", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXCLK, 0,
 			"gmii0_rxclk", "vin1b_d4", "rmii0_crs", NULL, NULL,
-			"spi3_cs2", NULL, "gpio3_27"),
+			"spi3_cs2", NULL, "gpio3_27", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD0, 0,
 			"gmii0_rxd0", "vin1b_d5", "rmii0_txd0", NULL, NULL,
-			NULL, NULL, "gpio3_28"),
+			NULL, NULL, "gpio3_28", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD1, 0,
 			"gmii0_rxd1", "vin1b_d6", "rmii0_txd1", NULL, NULL,
-			NULL, NULL, "gpio3_29"),
+			NULL, NULL, "gpio3_29", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD2, 0,
 			"gmii0_rxd2", "vin1b_d7", "rmii0_txen", NULL, NULL,
-			NULL, NULL, "gpio3_30_mux0"),
+			NULL, NULL, "gpio3_30_mux0", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD3, 0,
 			"gmii0_rxd3", NULL, "gpmc_a_27_mux1", "gpmc_a_26_mux1",
-			"gpmc_a_0_mux0", "uart5_rxd_mux0", NULL, NULL),
+			"gpmc_a_0_mux0", "uart5_rxd_mux0", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD4, 0,
 			"gmii0_rxd4", NULL, NULL, NULL, "gpmc_a_1_mux0",
-			"uart5_txd_mux0", NULL, NULL),
+			"uart5_txd_mux0", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD5, 0,
 			"gmii0_rxd5", NULL, NULL, NULL, "gpmc_a_2_mux0",
-			"uart5_ctsn_mux0", NULL, NULL),
+			"uart5_ctsn_mux0", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD6, 0,
 			"gmii0_rxd6", NULL, NULL, NULL, "gpmc_a_3_mux0",
-			"uart5_rtsn_mux0", NULL, NULL),
+			"uart5_rtsn_mux0", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXD7, 0,
 			"gmii0_rxd7", NULL, NULL, NULL, "gpmc_a_4_mux0",
-			"spi2_cs3", NULL, NULL),
+			"spi2_cs3", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_RXDV, 0,
 			"gmii0_rxdv", NULL, NULL, NULL, "gpmc_a_5_mux0",
-			"spi2_sclk_mux2", NULL, NULL),
+			"spi2_sclk_mux2", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_GTXCLK, 0,
 			"gmii0_gtxclk", NULL, NULL, NULL, "gpmc_a_6_mux0",
-			"spi2_d_1_mux2", NULL, NULL),
+			"spi2_d_1_mux2", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD0, 0,
 			"gmii0_txd0", NULL, NULL, NULL, "gpmc_a_7_mux0",
-			"spi2_d_0_mux2", NULL, NULL),
+			"spi2_d_0_mux2", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD1, 0,
 			"gmii0_txd1", NULL, NULL, NULL, "gpmc_a_8_mux0",
-			"uart4_rxd_mux1", NULL, NULL),
+			"uart4_rxd_mux1", NULL, NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD2, 0,
 			"gmii0_txd2", "rmii1_rxd0_mux0", NULL, NULL,
-			"gpmc_a_9_mux0", "uart4_txd_mux1", NULL, NULL),
+			"gpmc_a_9_mux0", "uart4_txd_mux1", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD3, 0,
 			"gmii0_txd3", "rmii1_rxd1_mux0", NULL, NULL,
-			"gpmc_a_10_mux0", "uart4_ctsn_mux1", NULL, NULL),
+			"gpmc_a_10_mux0", "uart4_ctsn_mux1", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD4, 0,
 			"gmii0_txd4", "rmii1_rxer_mux0", NULL, NULL,
-			"gpmc_a_11_mux0", "uart4_rtsn_mux1", NULL, NULL),
+			"gpmc_a_11_mux0", "uart4_rtsn_mux1", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD5, 0,
 			"gmii0_txd5", "rmii1_crs_mux0", NULL, NULL,
-			"gpmc_a_12_mux0", "uart1_rxd_mux1", NULL, NULL),
+			"gpmc_a_12_mux0", "uart1_rxd_mux1", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD6, 0,
 			"gmii0_txd6", "rmii1_txd0_mux0", NULL, NULL,
-			"gpmc_a_13_mux0", "uart1_txd_mux1", NULL, NULL),
+			"gpmc_a_13_mux0", "uart1_txd_mux1", NULL, NULL, NULL,
+			NULL, NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXD7, 0,
 			"gmii0_txd7", "rmii1_txd1_mux0", NULL, NULL,
-			"gpmc_a_14_mux0", "uart1_ctsn", NULL, NULL),
+			"gpmc_a_14_mux0", "uart1_ctsn", NULL, NULL, NULL, NULL,
+			NULL, NULL),
 	_TI814X_MUXENTRY(GMII0_TXEN, 0,
 			"gmii0_txen", "rmii1_txen_mux0", NULL, NULL,
-			"gpmc_a_15_mux0", "uart1_rtsn", NULL, NULL),
+			"gpmc_a_15_mux0", "uart1_rtsn", NULL, NULL, NULL, NULL,
+			NULL, NULL),
+
+	/* Following GMII0_RXD3 to GMII0_TXEN  are on TI811X only */
+	_TI814X_MUXENTRY(GMII0_RXD3, 0,
+			"gmii0_rxd3_ti811x", NULL, NULL, NULL,
+			NULL, NULL, NULL, "gpio5_16", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_RXD4, 0,
+			"gmii0_rxd4_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_17", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_RXD5, 0,
+			"gmii0_rxd5_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_18", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_RXD6, 0,
+			"gmii0_rxd6_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_19", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_RXD7, 0,
+			"gmii0_rxd7_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_20", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_RXDV, 0,
+			"gmii0_rxdv_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_21", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_GTXCLK, 0,
+			"gmii0_gtxclk_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_22", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD0, 0,
+			"gmii0_txd0_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_23", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD1, 0,
+			"gmii0_txd1_ti811x", NULL, NULL, NULL, NULL,
+			NULL, NULL, "gpio5_24", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD2, 0,
+			"gmii0_txd2_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "ehrpwm2A_mux1", "gpio5_25", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD3, 0,
+			"gmii0_txd3", NULL, NULL, NULL,
+			NULL, NULL, "ehrpwm2B_mux1", "gpio5_26", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD4, 0,
+			"gmii0_txd4_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "ehrpwm2_tripzone_input_mux1", "gpio5_27",
+			NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD5, 0,
+			"gmii0_txd5_ti811x", NULL, NULL, NULL,
+			NULL, NULL, NULL, "gpio5_28", NULL, NULL, NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD6, 0,
+			"gmii0_txd6_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "eQEP1A_in_mux1", "gpio5_29", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXD7, 0,
+			"gmii0_txd7_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "eQEP1B_in_mux1", "gpio5_30", NULL, NULL,
+			NULL, NULL),
+	_TI814X_MUXENTRY(GMII0_TXEN, 0,
+			"gmii0_txen_ti811x", NULL, NULL, NULL,
+			NULL, NULL, "eQEP1_index_mux1", "gpio5_31", NULL, NULL,
+			NULL, NULL),
+
 	_TI814X_MUXENTRY(CLKIN32, 0,
 			"clkin32", NULL, "clkout0", NULL, NULL, NULL,
-			"timer3_mux3", "gpio3_31"),
+			"timer3_mux3", "gpio3_31", NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(RESETN, 0,
-			"resetn", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"resetn", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(NMIN, 0,
-			"nmin", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"nmin", NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(RSTOUTN, 0,
-			"rstoutn", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"rstoutn", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(I2C0_SCL, 0,
-			"i2c0_scl", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"i2c0_scl", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(I2C0_SDA, 0,
-			"i2c0_sda", NULL, NULL, NULL, NULL, NULL, NULL, NULL),
+			"i2c0_sda", NULL, NULL, NULL, NULL, NULL, NULL,
+			NULL, NULL, NULL, NULL, NULL),
 	_TI814X_MUXENTRY(USB_DRVVBUS, 0,
 			"usb0_drvvbus", "gpio0_7", NULL, NULL, NULL, NULL, NULL,
-			NULL),
+			NULL, NULL, NULL, NULL, NULL),
 	{ .reg_offset = OMAP_MUX_TERMINATOR },
 };
 
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/ti81xx-common.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/include/mach/ti81xx-common.h	2014-08-06 15:51:16.097549484 -0600
@@ -0,0 +1,27 @@
+/*
+ * TI81XX common defs
+ *
+ * This module implements TI81XX specific Power management Routines
+ *
+ * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation version 2.
+ *
+ * This program is distributed "as is" WITHOUT ANY WARRANTY of any
+ * kind, whether express or implied; without even the implied warranty
+ * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#ifndef OMAP_MACH_TI81XX_COMMON_H
+#define OMAP_MACH_TI81XX_COMMON_H
+
+extern void __iomem *dram_sync;
+extern void __iomem *sram_sync;
+
+extern void ti81xx_do_wfi_sync(void __iomem *dram_sync,
+		void __iomem *sram_sync);
+
+#endif /* !OMAP_MACH_TI81XX_COMMON_H */
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/omap_hwmod_81xx_data.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/omap_hwmod_81xx_data.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/omap_hwmod_81xx_data.c	2014-08-07 07:58:50.000000000 -0600
@@ -827,7 +827,8 @@
 	.slaves         = ti816x_i2c2_slaves,
 	.slaves_cnt     = ARRAY_SIZE(ti816x_i2c2_slaves),
 	.class          = &i2c_class,
-	.omap_chip      = OMAP_CHIP_INIT(CHIP_IS_TI816X),
+	.omap_chip      = OMAP_CHIP_INIT(CHIP_IS_TI816X | CHIP_IS_TI814X |
+					CHIP_IS_DM385),
 };
 /* I2C3 */
 static struct omap_hwmod_irq_info i2c3_mpu_irqs[] = {
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/serial.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/serial.c	2014-08-06 15:51:16.105549484 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/serial.c	2014-08-06 15:51:16.101549484 -0600
@@ -712,6 +712,7 @@
 	void *pdata = NULL;
 	u32 pdata_size = 0;
 	char *name;
+	struct clk *uart_clk;
 #ifndef CONFIG_SERIAL_OMAP
 	struct plat_serial8250_port ports[2] = {
 		{},
@@ -751,7 +752,8 @@
 	p->flags = UPF_BOOT_AUTOCONF;
 	p->iotype = UPIO_MEM;
 	p->regshift = 2;
-	p->uartclk = OMAP24XX_BASE_BAUD * 16;
+	uart_clk = clk_get(NULL, oh->main_clk);
+	omap_up.uartclk = clk_get_rate(uart_clk);
 	p->irq = oh->mpu_irqs[0].irq;
 	p->mapbase = oh->slaves[0]->addr->pa_start;
 	p->membase = omap_hwmod_get_mpu_rt_va(oh);
@@ -784,7 +786,8 @@
 	name = DRIVER_NAME;
 
 	omap_up.dma_enabled = uart->dma_enabled;
-	omap_up.uartclk = OMAP24XX_BASE_BAUD * 16;
+	uart_clk = clk_get(NULL, oh->main_clk);
+	omap_up.uartclk = clk_get_rate(uart_clk);
 	omap_up.mapbase = oh->slaves[0]->addr->pa_start;
 	omap_up.membase = omap_hwmod_get_mpu_rt_va(oh);
 	omap_up.irqflags = IRQF_SHARED;
Index: kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains2xxx_3xxx_data.c
===================================================================
--- kernel.orig/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains2xxx_3xxx_data.c	2012-08-30 05:48:03.000000000 -0600
+++ kernel/linux-2.6.37-psp04.04.00.01/arch/arm/mach-omap2/clockdomains2xxx_3xxx_data.c	2014-08-06 16:09:16.081500170 -0600
@@ -862,6 +862,8 @@
 #ifdef CONFIG_ARCH_TI81XX
 	&alwon_mpu_816x_clkdm,
 	&alwon_l3_slow_81xx_clkdm,
+	&alwon_l3_med_81xx_clkdm,
+	&alwon_l3_fast_81xx_clkdm,
 	&alwon_ethernet_81xx_clkdm,
 	&alwon_ocmc_814x_clkdm,
 	&mmu_81xx_clkdm,
