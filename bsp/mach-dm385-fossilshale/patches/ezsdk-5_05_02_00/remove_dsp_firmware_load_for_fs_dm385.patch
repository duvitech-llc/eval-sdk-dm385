Index: ezsdk-5_05_02_00/Makefile
===================================================================
--- ezsdk-5_05_02_00.orig/Makefile	2014-12-02 10:19:32.890565134 -0600
+++ ezsdk-5_05_02_00/Makefile	2014-12-02 10:30:53.098534074 -0600
@@ -54,12 +54,12 @@
 #Firmware to be loaded into the M3, this must be located in /lib/firmware/
 #Needed by V4L2 capture driver
 ifeq ($(CONFIG_PROPRIETARY_EZSDK_ENABLE_V4L2_CAPTURE),y)
-VPSS_FIRMWARE?=ezsdk/board-support/prebuilt-images/dm814x-firmware_05_02_00_48/dm814x_hdvpss_v4l2.xem3
+VPSS_FIRMWARE?=custom_firmware/dm385_hdvpss_mipi.xem3
 else
 VPSS_FIRMWARE?=ezsdk/board-support/prebuilt-images/dm814x-firmware_05_02_00_48/dm814x_hdvpss.xem3
 endif
 HDVICP2_FIRMWARE?=ezsdk/board-support/prebuilt-images/dm814x-firmware_05_02_00_48/dm814x_hdvicp.xem3
-DSP_FIRMWARE?=ezsdk/board-support/prebuilt-images/dm814x-firmware_05_02_00_48/dm814x_c6xdsp.xe674
+DSP_FIRMWARE?=
 endif
 
 #====================================================================================================
Index: ezsdk-5_05_02_00/coprocessors.init.in
===================================================================
--- ezsdk-5_05_02_00.orig/coprocessors.init.in	2014-12-02 10:19:32.890565134 -0600
+++ ezsdk-5_05_02_00/coprocessors.init.in	2014-12-02 10:19:32.886565134 -0600
@@ -4,31 +4,41 @@
 HDVPSS_ID=2
 DSP_ID=0
 USE_V4L2_CAPTURE=@V4L2_ENABLE@
+USE_DSP_FIRMWARE=@DSP_FIRMWARE@
 
 case "$1" in
 start)
 	prcm_config_app s > /dev/null
 	echo "Loading coprocessors modules..."
-	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/cmemk.ko ] ; then
-	    PHYS_START=@CMEM_START@
-	    if [ -z "$PHYS_START" ] ; then
-	        RESERVED_START=$(( `sed -e "s/.*mem=\([0-9]*\)M .*/\1 * 1024 * 1024/" /proc/cmdline` ))
-	        # Some platforms like DM365 setup reserved video capture and display buffers on the reserver memory area
-	        # so we are careful to avoid overlaping these areas with cmem
-	        VIDEO_DISPLAY_BUFFERS_SIZE=$(( `( grep -q y.cont2 /proc/cmdline && sed -e "s/.*y.cont2_bufsize=\([0-9]*\) .*/+ \1/" /proc/cmdline ) || echo 0` ))
-	        VIDEO_CAPTURE_BUFFERS_SIZE=$(( `( grep -q re.cont /proc/cmdline && sed -e 's/.*e.cont_bufsize=\([0-9]*\) .*/+ \1/' /proc/cmdline ) || echo 0` ))
-	        PHYS_START=`printf '0x%x' $(( @RAM_BASE@ + $RESERVED_START + $VIDEO_DISPLAY_BUFFERS_SIZE + $VIDEO_CAPTURE_BUFFERS_SIZE ))`
-	    fi
-	    PHYS_END=`printf '0x%x' $(($PHYS_START + @CMEM_SIZE@))`
-	    PHYS_END_INT=`printf '%d' $(($PHYS_START + @CMEM_SIZE@))`
-	    if [ $PHYS_END_INT -gt @RAM_END_INT@ ] ; then
-		echo "WARNING: the cmem allocation ends beyond the end of RAM registered for this hardware"
-		echo "End of cmem: $PHYS_END, End of ram: @RAM_END@ \n"
-	    fi
-	    rmmod cmem 2>/dev/null || true
-	    echo "  Loading cmem from $PHYS_START to $PHYS_END"
-	    modprobe cmemk phys_start=$PHYS_START phys_end=$PHYS_END allowOverlap=1 useHeapIfPoolUnavailable=1 @CMEM_TCMSETTINGS@
+	if [ -n "$USE_DSP_FIRMWARE" ] ; then
+		if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/cmemk.ko ] ; then
+			PHYS_START=@CMEM_START@
+			if [ -z "$PHYS_START" ] ; then
+			    RESERVED_START=$(( `sed -e "s/.*mem=\([0-9]*\)M .*/\1 * 1024 * 1024/" /proc/cmdline` ))
+			    # Some platforms like DM365 setup reserved video capture and display buffers on the reserver memory area
+			    # so we are careful to avoid overlaping these areas with cmem
+			    VIDEO_DISPLAY_BUFFERS_SIZE=$(( `( grep -q y.cont2 /proc/cmdline && sed -e "s/.*y.cont2_bufsize=\([0-9]*\) .*/+ \1/" /proc/cmdline ) || echo 0` ))
+			    VIDEO_CAPTURE_BUFFERS_SIZE=$(( `( grep -q re.cont /proc/cmdline && sed -e 's/.*e.cont_bufsize=\([0-9]*\) .*/+ \1/' /proc/cmdline ) || echo 0` ))
+			    PHYS_START=`printf '0x%x' $(( @RAM_BASE@ + $RESERVED_START + $VIDEO_DISPLAY_BUFFERS_SIZE + $VIDEO_CAPTURE_BUFFERS_SIZE ))`
+			fi
+			PHYS_END=`printf '0x%x' $(($PHYS_START + @CMEM_SIZE@))`
+			PHYS_END_INT=`printf '%d' $(($PHYS_START + @CMEM_SIZE@))`
+			if [ $PHYS_END_INT -gt @RAM_END_INT@ ] ; then
+			echo "WARNING: the cmem allocation ends beyond the end of RAM registered for this hardware"
+			echo "End of cmem: $PHYS_END, End of ram: @RAM_END@ \n"
+			fi
+			rmmod cmem 2>/dev/null || true
+			echo "  Loading cmem from $PHYS_START to $PHYS_END"
+			modprobe cmemk phys_start=$PHYS_START phys_end=$PHYS_END allowOverlap=1 useHeapIfPoolUnavailable=1 @CMEM_TCMSETTINGS@
+		fi
 	fi
+
+	# TODO add remote_debug_client.out, linux_prcm_ipcam and sys_pri.out correctly to the SDK
+	cd /home
+	echo "Init debug client to check M3 prints on console [remote_debug_client.out]"
+	./remote_debug_client.out 0xbfef0000 &
+
+
 	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/dsp/syslink.ko ] ; then
 	    rmmod syslink 2>/dev/null || true
 	    modprobe syslink
@@ -39,10 +49,13 @@
 	sleep 1
 	if [ -f /lib/firmware/@VPSS_FIRMWARE@ ] ; then
 	    firmware_loader $HDVPSS_ID  /lib/firmware/@VPSS_FIRMWARE@ start -i2c @I2C_MODE@
+	    #firmware_loader $HDVPSS_ID  /lib/firmware/dm814xbm_m3vpss_whole_program_debug.xem3 start -i2c @I2C_MODE@
 	fi
 	sleep 1
-	if [ -f /lib/firmware/@DSP_FIRMWARE@ ] ; then
-	    firmware_loader $DSP_ID  /lib/firmware/@DSP_FIRMWARE@ start -i2c @I2C_MODE@
+	if [ -n "$USE_DSP_FIRMWARE" ] ; then
+		if [ -f /lib/firmware/@DSP_FIRMWARE@ ] ; then
+			firmware_loader $DSP_ID  /lib/firmware/@DSP_FIRMWARE@ start -i2c @I2C_MODE@
+		fi
 	fi
 	sleep 1
 	if [ -f /lib/modules/@KERNELVERSION@/kernel/drivers/video/ti81xx/vpss/vpss.ko ] ; then
